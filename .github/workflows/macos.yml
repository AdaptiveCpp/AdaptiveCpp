name: macOS build

on: [push, pull_request]

jobs:
  build_appleclang:
    name: AppleClang [macOS]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: install dependencies
      run: |
        set +e
        brew update
        brew install cmake
        brew install libomp
        brew install boost
        set -e
    - name: build
      run: |
        mkdir build && cd build
        cmake .. \
        -DWITH_OPENCL_BACKEND=OFF \
        -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/build/install
        make -j 2 install VERBOSE=ON
    - name: build CPU tests
      run: |
        mkdir build/tests-cpu && cd build/tests-cpu
        cmake \
        -DACPP_TARGETS=omp.library-only \
        -DAdaptiveCpp_DIR=${GITHUB_WORKSPACE}/build/install/lib/cmake/AdaptiveCpp \
        ${GITHUB_WORKSPACE}/tests
        make -j 2 VERBOSE=ON
    - name: run CPU tests
      run: |
        cd ${GITHUB_WORKSPACE}/build/tests-cpu
        LD_LIBRARY_PATH=${GITHUB_WORKSPACE}/build/install/lib ./sycl_tests
  build_brewclang:
    name: Upstream Clang ${{ matrix.test }} [macOS]
    runs-on: macos-latest
    strategy:
      matrix:
        test: [generic, omp.library-only, omp.accelerated]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: install dependencies
      run: |
        set +e
        brew update
        brew install cmake
        brew install llvm
        brew install libomp
        brew install boost
        set -e

        export CXX=`brew list llvm | grep clang++`
        echo "CXX=${CXX}" >> $GITHUB_ENV
        export LLVM_ROOT=`echo $CXX | sed -E "s/\/bin\/.*//"`
        echo "LLVM_DIR=${LLVM_ROOT}/lib/cmake/llvm" >> $GITHUB_ENV
        echo "LDFLAGS=-L${LLVM_ROOT}/lib/c++ -Wl,-rpath,${LLVM_ROOT}/lib/c++" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${LLVM_ROOT}/lib/c++:${LLVM_ROOT}/lib:${GITHUB_WORKSPACE}/build/install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "DYLD_PRINT_LIBRARIES=1" >> $GITHUB_ENV
    - name: build
      run: |
        mkdir build && cd build
        cmake .. \
        -DWITH_OPENCL_BACKEND=OFF \
        -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/build/install \
        -DLLVM_DIR=$LLVM_DIR
        make -j 2 install VERBOSE=ON
    - name: build library only CPU tests
      run: |
        mkdir build/tests-cpu && cd build/tests-cpu
        cmake \
        -DACPP_TARGETS=${{matrix.test}} \
        -DAdaptiveCpp_DIR=${GITHUB_WORKSPACE}/build/install/lib/cmake/AdaptiveCpp \
        ${GITHUB_WORKSPACE}/tests
        make -j 2 VERBOSE=ON
    - name: run CPU tests
      if: matrix.test != 'generic'
      run: |
        cd ${GITHUB_WORKSPACE}/build/tests-cpu
        ./sycl_tests
    - name: run CPU tests
      if: matrix.test == 'generic'
      run: |
        cd ${GITHUB_WORKSPACE}/build/tests-cpu
        ./sycl_tests -t '!group_functions_tests/*' -t '!extension_tests/*' -t '!kernel_invocation_tests/hierarchical*'
    - name: run LIT tests (SSCP)
      if: matrix.test == 'generic'
      run: |
        cd ${GITHUB_WORKSPACE}/build/tests-cpu
        make -j 2 VERBOSE=ON check-cbs
    - name: run LIT tests (CBS)
      if: matrix.test == 'omp.accelerated'
      run: |
        cd ${GITHUB_WORKSPACE}/build/tests-cpu
        make -j 2 VERBOSE=ON check-sscp
