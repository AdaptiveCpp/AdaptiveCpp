{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"tests/Ballot_test.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"remix_tests.sol\\\"; // this import is automatically injected by Remix.\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"../contracts/3_Ballot.sol\\\";\\n\\ncontract BallotTest {\\n\\n    bytes32[] proposalNames;\\n\\n    Ballot ballotToTest;\\n    function beforeAll () public {\\n        proposalNames.push(bytes32(\\\"candidate1\\\"));\\n        ballotToTest = new Ballot(proposalNames);\\n    }\\n\\n    function checkWinningProposal () public {\\n        console.log(\\\"Running checkWinningProposal\\\");\\n        ballotToTest.vote(0);\\n        Assert.equal(ballotToTest.winningProposal(), uint(0), \\\"proposal at index 0 should be the winning proposal\\\");\\n        Assert.equal(ballotToTest.winnerName(), bytes32(\\\"candidate1\\\"), \\\"candidate1 should be the winner name\\\");\\n    }\\n\\n    function checkWinninProposalWithReturnValue () public view returns (bool) {\\n        return ballotToTest.winningProposal() == 0;\\n    }\\n}\"},\"contracts/3_Ballot.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/** \\n * @title Ballot\\n * @dev Implements voting process along with vote delegation\\n */\\ncontract Ballot {\\n\\n    struct Voter {\\n        uint weight; // weight is accumulated by delegation\\n        bool voted;  // if true, that person already voted\\n        address delegate; // person delegated to\\n        uint vote;   // index of the voted proposal\\n    }\\n\\n    struct Proposal {\\n        // If you can limit the length to a certain number of bytes, \\n        // always use one of bytes1 to bytes32 because they are much cheaper\\n        bytes32 name;   // short name (up to 32 bytes)\\n        uint voteCount; // number of accumulated votes\\n    }\\n\\n    address public chairperson;\\n\\n    mapping(address => Voter) public voters;\\n\\n    Proposal[] public proposals;\\n\\n    /** \\n     * @dev Create a new ballot to choose one of 'proposalNames'.\\n     * @param proposalNames names of proposals\\n     */\\n    constructor(bytes32[] memory proposalNames) {\\n        chairperson = msg.sender;\\n        voters[chairperson].weight = 1;\\n\\n        for (uint i = 0; i < proposalNames.length; i++) {\\n            // 'Proposal({...})' creates a temporary\\n            // Proposal object and 'proposals.push(...)'\\n            // appends it to the end of 'proposals'.\\n            proposals.push(Proposal({\\n                name: proposalNames[i],\\n                voteCount: 0\\n            }));\\n        }\\n    }\\n\\n    /** \\n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\\n     * @param voter address of voter\\n     */\\n    function giveRightToVote(address voter) public {\\n        require(\\n            msg.sender == chairperson,\\n            \\\"Only chairperson can give right to vote.\\\"\\n        );\\n        require(\\n            !voters[voter].voted,\\n            \\\"The voter already voted.\\\"\\n        );\\n        require(voters[voter].weight == 0);\\n        voters[voter].weight = 1;\\n    }\\n\\n    /**\\n     * @dev Delegate your vote to the voter 'to'.\\n     * @param to address to which vote is delegated\\n     */\\n    function delegate(address to) public {\\n        Voter storage sender = voters[msg.sender];\\n        require(!sender.voted, \\\"You already voted.\\\");\\n        require(to != msg.sender, \\\"Self-delegation is disallowed.\\\");\\n\\n        while (voters[to].delegate != address(0)) {\\n            to = voters[to].delegate;\\n\\n            // We found a loop in the delegation, not allowed.\\n            require(to != msg.sender, \\\"Found loop in delegation.\\\");\\n        }\\n        sender.voted = true;\\n        sender.delegate = to;\\n        Voter storage delegate_ = voters[to];\\n        if (delegate_.voted) {\\n            // If the delegate already voted,\\n            // directly add to the number of votes\\n            proposals[delegate_.vote].voteCount += sender.weight;\\n        } else {\\n            // If the delegate did not vote yet,\\n            // add to her weight.\\n            delegate_.weight += sender.weight;\\n        }\\n    }\\n\\n    /**\\n     * @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\\n     * @param proposal index of proposal in the proposals array\\n     */\\n    function vote(uint proposal) public {\\n        Voter storage sender = voters[msg.sender];\\n        require(sender.weight != 0, \\\"Has no right to vote\\\");\\n        require(!sender.voted, \\\"Already voted.\\\");\\n        sender.voted = true;\\n        sender.vote = proposal;\\n\\n        // If 'proposal' is out of the range of the array,\\n        // this will throw automatically and revert all\\n        // changes.\\n        proposals[proposal].voteCount += sender.weight;\\n    }\\n\\n    /** \\n     * @dev Computes the winning proposal taking all previous votes into account.\\n     * @return winningProposal_ index of winning proposal in the proposals array\\n     */\\n    function winningProposal() public view\\n            returns (uint winningProposal_)\\n    {\\n        uint winningVoteCount = 0;\\n        for (uint p = 0; p < proposals.length; p++) {\\n            if (proposals[p].voteCount > winningVoteCount) {\\n                winningVoteCount = proposals[p].voteCount;\\n                winningProposal_ = p;\\n            }\\n        }\\n    }\\n\\n    /** \\n     * @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\\n     * @return winnerName_ the name of the winner\\n     */\\n    function winnerName() public view\\n            returns (bytes32 winnerName_)\\n    {\\n        winnerName_ = proposals[winningProposal()].name;\\n    }\\n}\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view
 {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\",
 p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256
 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction
 log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\",
 p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\",
 p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\",
 p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\"},\"remix_tests.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.4.22 <0.9.0;\\n\\nlibrary Assert {\\n\\n  event AssertionEvent(\\n    bool passed,\\n    string message,\\n    string methodName\\n  );\\n\\n  event AssertionEventUint(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    uint256 returned,\\n    uint256 expected\\n  );\\n\\n  event AssertionEventInt(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    int256 returned,\\n    int256 expected\\n  );\\n\\n  event AssertionEventBool(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    bool returned,\\n    bool expected\\n  );\\n\\n  event AssertionEventAddress(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    address returned,\\n    address expected\\n  );\\n\\n  event AssertionEventBytes32(\\n    bool passed,\\n    string message,\\n    string methodName,\\n  
  bytes32 returned,\\n    bytes32 expected\\n  );\\n\\n  event AssertionEventString(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    string returned,\\n    string expected\\n  );\\n\\n  event AssertionEventUintInt(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    uint256 returned,\\n    int256 expected\\n  );\\n\\n  event AssertionEventIntUint(\\n    bool passed,\\n    string message,\\n    string methodName,\\n    int256 returned,\\n    uint256 expected\\n  );\\n\\n  function ok(bool a, string memory message) public returns (bool result) {\\n    result = a;\\n    emit AssertionEvent(result, message, \\\"ok\\\");\\n  }\\n\\n  function equal(uint256 a, uint256 b, string memory message) public returns (bool result) {\\n    result = (a == b);\\n    emit AssertionEventUint(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  function equal(int256 a, int256 b, string memory message) public returns (bool result) {\\n    result = (a == b);\\n    emit AssertionEventInt(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  function equal(bool a, bool b, string memory message) public returns (bool result) {\\n    result = (a == b);\\n    emit AssertionEventBool(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  // TODO: only for certain versions of solc\\n  //function equal(fixed a, fixed b, string message) public returns (bool result) {\\n  //  result = (a == b);\\n  //  emit AssertionEvent(result, message);\\n  //}\\n\\n  // TODO: only for certain versions of solc\\n  //function equal(ufixed a, ufixed b, string message) public returns (bool result) {\\n  //  result = (a == b);\\n  //  emit AssertionEvent(result, message);\\n  //}\\n\\n  function equal(address a, address b, string memory message) public returns (bool result) {\\n    result = (a == b);\\n    emit AssertionEventAddress(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  function equal(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\\n    result = (a == b);\\n    emit AssertionEventBytes32(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  function equal(string memory a, string memory b, string memory message) public returns (bool result) {\\n     result = (keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)));\\n     emit AssertionEventString(result, message, \\\"equal\\\", a, b);\\n  }\\n\\n  function notEqual(uint256 a, uint256 b, string memory message) public returns (bool result) {\\n    result = (a != b);\\n    emit AssertionEventUint(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  function notEqual(int256 a, int256 b, string memory message) public returns (bool result) {\\n    result = (a != b);\\n    emit AssertionEventInt(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  function notEqual(bool a, bool b, string memory message) public returns (bool result) {\\n    result = (a != b);\\n    emit AssertionEventBool(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  // TODO: only for certain versions of solc\\n  //function notEqual(fixed a, fixed b, string message) public returns (bool result) {\\n  //  result = (a != b);\\n  //  emit AssertionEvent(result, message);\\n  //}\\n\\n  // TODO: only for certain versions of solc\\n  //function notEqual(ufixed a, ufixed b, string message) public returns (bool result) {\\n  //  result = (a != b);\\n  //  emit AssertionEvent(result, message);\\n  //}\\n\\n  function notEqual(address a, address b, string memory message) public returns (bool result) {\\n    result = (a != b);\\n    emit AssertionEventAddress(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  function notEqual(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\\n    result = (a != b);\\n    emit AssertionEventBytes32(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  function notEqual(string memory a, string memory b, string memory message) public returns (bool result) {\\n    result = (keccak256(abi.encodePacked(a)) != keccak256(abi.encodePacked(b)));\\n    emit AssertionEventString(result, message, \\\"notEqual\\\", a, b);\\n  }\\n\\n  /*----------------- Greater than --------------------*/\\n  function greaterThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\\n    result = (a > b);\\n    emit AssertionEventUint(result, message, \\\"greaterThan\\\", a, b);\\n  }\\n\\n  function greaterThan(int256 a, int256 b, string memory message) public returns (bool result) {\\n    result = (a > b);\\n    emit AssertionEventInt(result, message, \\\"greaterThan\\\", a, b);\\n  }\\n  // TODO: safely compare between uint and int\\n  function greaterThan(uint256 a, int256 b, string memory message) public returns (bool result) {\\n    if(b < int(0)) {\\n      // int is negative uint \\\"a\\\" always greater\\n      result = true;\\n    } else {\\n      result = (a > uint(b));\\n    }\\n    emit AssertionEventUintInt(result, message, \\\"greaterThan\\\", a, b);\\n  }\\n  function greaterThan(int256 a, uint256 b, string memory message) public returns (bool result) {\\n    if(a < int(0)) {\\n      // int is negative uint \\\"b\\\" always greater\\n      result = false;\\n    } else {\\n      result = (uint(a) > b);\\n    }\\n    emit AssertionEventIntUint(result, message, \\\"greaterThan\\\", a, b);\\n  }\\n  /*----------------- Lesser than --------------------*/\\n  function lesserThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\\n    result = (a < b);\\n    emit AssertionEventUint(result, message, \\\"lesserThan\\\", a, b);\\n  }\\n\\n  function lesserThan(int256 a, int256 b, string memory message) public returns (bool result) {\\n    result = (a < b);\\n    emit AssertionEventInt(result, message, \\\"lesserThan\\\", a, b);\\n  }\\n  // TODO: safely compare between uint and int\\n  function lesserThan(uint256 a, int256 b, string memory message) public returns (bool result) {\\n    if(b < int(0)) {\\n      // int is negative int \\\"b\\\" always lesser\\n      result = false;\\n    } else {\\n      result = (a < uint(b));\\n    }\\n    emit AssertionEventUintInt(result, message, \\\"lesserThan\\\", a, b);\\n  }\\n\\n  function lesserThan(int256 a, uint256 b, string memory message) public returns (bool result) {\\n    if(a < int(0)) {\\n      // int is negative int \\\"a\\\" always lesser\\n      result = true;\\n    } else {\\n      result = (uint(a) < b);\\n    }\\n    emit AssertionEventIntUint(result, message, \\\"lesserThan\\\", a, b);\\n  }\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":true,\"runs\":2000},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}}}}",
	"name": "BallotTest",
	"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"beforeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWinninProposalWithReturnValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWinningProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/Ballot_test.sol\":\"BallotTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x83fe6b367c140a5c7678c420da454c8c3866ccae12da149c5da3ce6568d29b6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5902f2f468a1f776b8f2cb9d584371af88e181954298af92402fca01d0dba3e7\",\"dweb:/ipfs/QmSUodhSvoorFL5m5CNqve8YvmuBpjCq17NbTf4GUX8ydw\"]},\"hardhat/console.sol\":{\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d\",\"dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic\"]},\"remix_tests.sol\":{\"keccak256\":\"0xe2783cdc204cba8c72494119339f1d90f9022b15d6c718c668b7f097d8e29787\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb6a22e64c7f16bcaab63b1c1a1b269d5be8a6d37bdd9dec1718477ab916b18e\",\"dweb:/ipfs/QmdkW1tT5iadBvaHMCoskhDGZKnfdg8o1D9CcoQYtdJet7\"]},\"tests/Ballot_test.sol\":{\"keccak256\":\"0xd10d2d511611f8a5f6f04151e8b534c4ac159ec184b89ef0db0f2205f8ab1600\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aa821f5ac1766e88c159d35afce8ce0e96fef9d34af2916d92828e26ae2c4d35\",\"dweb:/ipfs/QmZmhrkUtMSJtbiNEqFXPsm1xWBhkqcjFh5ZWYgNxfcEzQ\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {},
		"generatedSources": [],
		"linkReferences": {
			"remix_tests.sol": {
				"Assert": [
					{
						"length": 20,
						"start": 703
					},
					{
						"length": 20,
						"start": 1092
					}
				]
			}
		},
		"object": "608060405234801561001057600080fd5b5061117d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633439c57b146100465780637fea0d4b14610062578063ed2bee101461006c575b600080fd5b61004e610074565b604051901515815260200160405180910390f35b61006a61010e565b005b61006a6101db565b600154604080517f609ff1bd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163609ff1bd9160048083019260209291908290030181865afa1580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610108919061064d565b15919050565b600080546001810182558180527f63616e64696461746531000000000000000000000000000000000000000000007f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015560405161016d90610640565b6101779190610666565b604051809103906000f080158015610193573d6000803e3d6000fd5b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6102196040518060400160405280601c81526020017f52756e6e696e6720636865636b57696e6e696e6750726f706f73616c000000008152506105b3565b6001546040517f0121b93f0000000000000000000000000000000000000000000000000000000081526000600482015273ffffffffffffffffffffffffffffffffffffffff90911690630121b93f90602401600060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b5050505073__$acbfb1c35000d78352310b16a054a6b106$__63abcd7960600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663609ff1bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061064d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091526000602482015260606044820152603260648201527f70726f706f73616c20617420696e64657820302073686f756c6420626520746860848201527f652077696e6e696e672070726f706f73616c000000000000000000000000000060a482015260c401602060405180830381865af41580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906106ad565b5073__$acbfb1c35000d78352310b16a054a6b106$__63ea79dd79600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2ba53f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd919061064d565b7f63616e64696461746531000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161056f92919091825260208201526060604082018190526024908201527f63616e646964617465312073686f756c64206265207468652077696e6e65722060808201527f6e616d650000000000000000000000000000000000000000000000000000000060a082015260c00190565b602060405180830381865af415801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b091906106ad565b50565b6105b0816040516024016105c791906106d6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610a238061072583390190565b60006020828403121561065f57600080fd5b5051919050565b6020808252825482820181905260008481528281209092916040850190845b818110156106a157835483526001938401939285019201610685565b50909695505050505050565b6000602082840312156106bf57600080fd5b815180151581146106cf57600080fd5b9392505050565b600060208083528351808285015260005b81811015610703578581018301518582016040015282016106e7565b506000604082860101526040601f19601f830116850101925050509291505056fe608060405234801561001057600080fd5b50604051610a23380380610a2383398101604081905261002f916100e2565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a61019f565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd816101b5565b915050610052565b50506101dc565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326100cc565b8060051b604051601f19603f83011681018181108582111715610157576101576100cc565b60405291825284820192508381018501918883111561017557600080fd5b938501935b828510156101935784518452938501939285019261017a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101d557634e487b7160e01b600052601160045260246000fd5b5060010190565b610838806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461070a565b6101af565b005b6100b56100b036600461070a565b6102df565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a0610108366004610723565b61030d565b61011561052d565b6040519081526020016100c6565b6100a0610131366004610723565b6105aa565b610178610144366004610723565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6101156106d7565b33600090815260016020526040812080549091036102145760405162461bcd60e51b815260206004820152601460248201527f486173206e6f20726967687420746f20766f746500000000000000000000000060448201526064015b60405180910390fd5b600181015460ff16156102695760405162461bcd60e51b815260206004820152600e60248201527f416c726561647920766f7465642e000000000000000000000000000000000000604482015260640161020b565b600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600280820183905581548154909190849081106102b6576102b6610753565b906000526020600020906002020160010160008282546102d691906107b1565b90915550505050565b600281815481106102ef57600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103735760405162461bcd60e51b815260206004820152601260248201527f596f7520616c726561647920766f7465642e0000000000000000000000000000604482015260640161020b565b336001600160a01b038316036103cb5760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000604482015260640161020b565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561046f576001600160a01b039182166000908152600160208190526040909120015461010090049091169033820361046a5760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000604482015260640161020b565b6103cb565b600181810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff161561050e578154600282810154815481106104e3576104e3610753565b9060005260206000209060020201600101600082825461050391906107b1565b909155506105289050565b8154815482906000906105229084906107b1565b90915550505b505050565b600080805b6002548110156105a557816002828154811061055057610550610753565b9060005260206000209060020201600101541115610593576002818154811061057b5761057b610753565b90600052602060002090600202016001015491508092505b8061059d816107ca565b915050610532565b505090565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e000000000000000000000000000000000000000000000000606482015260840161020b565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106975760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e0000000000000000604482015260640161020b565b6001600160a01b038116600090815260016020526040902054156106ba57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106e361052d565b815481106106f3576106f3610753565b906000526020600020906002020160000154905090565b60006020828403121561071c57600080fd5b5035919050565b60006020828403121561073557600080fd5b81356001600160a01b038116811461074c57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107c4576107c4610782565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107fb576107fb610782565b506001019056fea2646970667358221220db3f4386e97bb8331c656fd0f95bfc4aa69377de5207da01ac32f66a1d1871ae64736f6c63430008130033a2646970667358221220d0b820754b1b789746a5928af4c0bdea35f755ec6d38d20a6fa1ce6f19d1b49864736f6c63430008130033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3439C57B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xED2BEE10 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A PUSH2 0x10E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x609FF1BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x609FF1BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x63616E6469646174653100000000000000000000000000000000000000000000 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH2 0x16D SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x219 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52756E6E696E6720636865636B57696E6E696E6750726F706F73616C00000000 DUP2 MSTORE POP PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x121B93F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x121B93F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x299 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x0 PUSH4 0xABCD7960 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x609FF1BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x324 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x70726F706F73616C20617420696E64657820302073686F756C64206265207468 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x652077696E6E696E672070726F706F73616C0000000000000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x6AD JUMP JUMPDEST POP PUSH20 0x0 PUSH4 0xEA79DD79 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BA53F0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH32 0x63616E6469646174653100000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E646964617465312073686F756C64206265207468652077696E6E657220 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6E616D6500000000000000000000000000000000000000000000000000000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x6AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x41304FAC00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA23 DUP1 PUSH2 0x725 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 SLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP2 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI DUP4 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 ADD PUSH2 0x685 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x703 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA23 CODESIZE SUB DUP1 PUSH2 0xA23 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x19F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xBD DUP2 PUSH2 0x1B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x1DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH2 0x132 PUSH2 0xCC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x157 JUMPI PUSH2 0x157 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT
 ISZERO PUSH2 0x193 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x17A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x838 DUP1 PUSH2 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x115 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x6D7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486173206E6F20726967687420746F20766F7465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F7465642E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x46F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50E JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x528 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x522 SWAP1 DUP5 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5A5 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x593 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x59D DUP2 PUSH2 0x7CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x532 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6E3 PUSH2 0x52D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6F3 JUMPI PUSH2 0x6F3 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7C4 JUMPI PUSH2 0x7C4 PUSH2 0x782 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x782 JUMP JUMPDEST
 POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTCODEHASH NUMBER DUP7 0xE9 PUSH28 0xB8331C656FD0F95BFC4AA69377DE5207DA01AC32F66A1D1871AE6473 PUSH16 0x6C63430008130033A264697066735822 SLT KECCAK256 0xD0 0xB8 KECCAK256 PUSH22 0x4B1B789746A5928AF4C0BDEA35F755EC6D38D20A6FA1 0xCE PUSH16 0x19D1B49864736F6C6343000813003300 ",
		"sourceMap": "213:725:3:-:0;;;;;;;;;;;;;;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"name": "beforeAll",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "checkWinninProposalWithReturnValue",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "checkWinningProposal",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 9139,
				"contract": "tests/Ballot_test.sol:BallotTest",
				"label": "proposalNames",
				"offset": 0,
				"slot": "0",
				"type": "t_array(t_bytes32)dyn_storage"
			},
			{
				"astId": 9142,
				"contract": "tests/Ballot_test.sol:BallotTest",
				"label": "ballotToTest",
				"offset": 0,
				"slot": "1",
				"type": "t_contract(Ballot)316"
			}
		],
		"types": {
			"t_array(t_bytes32)dyn_storage": {
				"base": "t_bytes32",
				"encoding": "dynamic_array",
				"label": "bytes32[]",
				"numberOfBytes": "32"
			},
			"t_bytes32": {
				"encoding": "inplace",
				"label": "bytes32",
				"numberOfBytes": "32"
			},
			"t_contract(Ballot)316": {
				"encoding": "inplace",
				"label": "contract Ballot",
				"numberOfBytes": "20"
			}
		}
	},
	"web3Deploy": "var ballottestContract = new web3.eth.Contract([{\"inputs\":[],\"name\":\"beforeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWinninProposalWithReturnValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWinningProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar ballottest = ballottestContract.deploy({\n     data: '0x608060405234801561001057600080fd5b5061117d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633439c57b146100465780637fea0d4b14610062578063ed2bee101461006c575b600080fd5b61004e610074565b604051901515815260200160405180910390f35b61006a61010e565b005b61006a6101db565b600154604080517f609ff1bd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163609ff1bd9160048083019260209291908290030181865afa1580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610108919061064d565b15919050565b600080546001810182558180527f63616e64696461746531000000000000000000000000000000000000000000007f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015560405161016d90610640565b6101779190610666565b604051809103906000f080158015610193573d6000803e3d6000fd5b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6102196040518060400160405280601c81526020017f52756e6e696e6720636865636b57696e6e696e6750726f706f73616c000000008152506105b3565b6001546040517f0121b93f0000000000000000000000000000000000000000000000000000000081526000600482015273ffffffffffffffffffffffffffffffffffffffff90911690630121b93f90602401600060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b5050505073__$acbfb1c35000d78352310b16a054a6b106$__63abcd7960600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663609ff1bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061064d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091526000602482015260606044820152603260648201527f70726f706f73616c20617420696e64657820302073686f756c6420626520746860848201527f652077696e6e696e672070726f706f73616c000000000000000000000000000060a482015260c401602060405180830381865af41580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906106ad565b5073__$acbfb1c35000d78352310b16a054a6b106$__63ea79dd79600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2ba53f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd919061064d565b7f63616e64696461746531000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161056f92919091825260208201526060604082018190526024908201527f63616e646964617465312073686f756c64206265207468652077696e6e65722060808201527f6e616d650000000000000000000000000000000000000000000000000000000060a082015260c00190565b602060405180830381865af415801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b091906106ad565b50565b6105b0816040516024016105c791906106d6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610a238061072583390190565b60006020828403121561065f57600080fd5b5051919050565b6020808252825482820181905260008481528281209092916040850190845b818110156106a157835483526001938401939285019201610685565b50909695505050505050565b6000602082840312156106bf57600080fd5b815180151581146106cf57600080fd5b9392505050565b600060208083528351808285015260005b81811015610703578581018301518582016040015282016106e7565b506000604082860101526040601f19601f830116850101925050509291505056fe608060405234801561001057600080fd5b50604051610a23380380610a2383398101604081905261002f916100e2565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a61019f565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd816101b5565b915050610052565b50506101dc565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326100cc565b8060051b604051601f19603f83011681018181108582111715610157576101576100cc565b60405291825284820192508381018501918883111561017557600080fd5b938501935b828510156101935784518452938501939285019261017a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101d557634e487b7160e01b600052601160045260246000fd5b5060010190565b610838806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461070a565b6101af565b005b6100b56100b036600461070a565b6102df565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a0610108366004610723565b61030d565b61011561052d565b6040519081526020016100c6565b6100a0610131366004610723565b6105aa565b610178610144366004610723565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6101156106d7565b33600090815260016020526040812080549091036102145760405162461bcd60e51b815260206004820152601460248201527f486173206e6f20726967687420746f20766f746500000000000000000000000060448201526064015b60405180910390fd5b600181015460ff16156102695760405162461bcd60e51b815260206004820152600e60248201527f416c726561647920766f7465642e000000000000000000000000000000000000604482015260640161020b565b600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600280820183905581548154909190849081106102b6576102b6610753565b906000526020600020906002020160010160008282546102d691906107b1565b90915550505050565b600281815481106102ef57600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103735760405162461bcd60e51b815260206004820152601260248201527f596f7520616c726561647920766f7465642e0000000000000000000000000000604482015260640161020b565b336001600160a01b038316036103cb5760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000604482015260640161020b565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561046f576001600160a01b039182166000908152600160208190526040909120015461010090049091169033820361046a5760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000604482015260640161020b565b6103cb565b600181810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff161561050e578154600282810154815481106104e3576104e3610753565b9060005260206000209060020201600101600082825461050391906107b1565b909155506105289050565b8154815482906000906105229084906107b1565b90915550505b505050565b600080805b6002548110156105a557816002828154811061055057610550610753565b9060005260206000209060020201600101541115610593576002818154811061057b5761057b610753565b90600052602060002090600202016001015491508092505b8061059d816107ca565b915050610532565b505090565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e000000000000000000000000000000000000000000000000606482015260840161020b565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106975760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e0000000000000000604482015260640161020b565b6001600160a01b038116600090815260016020526040902054156106ba57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106e361052d565b815481106106f3576106f3610753565b906000526020600020906002020160000154905090565b60006020828403121561071c57600080fd5b5035919050565b60006020828403121561073557600080fd5b81356001600160a01b038116811461074c57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107c4576107c4610782565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107fb576107fb610782565b506001019056fea2646970667358221220db3f4386e97bb8331c656fd0f95bfc4aa69377de5207da01ac32f66a1d1871ae64736f6c63430008130033a2646970667358221220d0b820754b1b789746a5928af4c0bdea35f755ec6d38d20a6fa1ce6f19d1b49864736f6c63430008130033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n
    }\n })",
	"functionHashes": {
		"7fea0d4b": "beforeAll()",
		"3439c57b": "checkWinninProposalWithReturnValue()",
		"ed2bee10": "checkWinningProposal()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "895400",
			"executionCost": "929",
			"totalCost": "896329"
		},
		"External": {
			"beforeAll()": "infinite",
			"checkWinninProposalWithReturnValue()": "infinite",
			"checkWinningProposal()": "infinite"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_sendLogPayload_340": {
				"entryPoint": null,
				"id": 340,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@beforeAll_9163": {
				"entryPoint": 270,
				"id": 9163,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@checkWinninProposalWithReturnValue_9217": {
				"entryPoint": 116,
				"id": 9217,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@checkWinningProposal_9205": {
				"entryPoint": 475,
				"id": 9205,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@log_911": {
				"entryPoint": 1459,
				"id": 911,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"abi_decode_tuple_t_bool_fromMemory": {
				"entryPoint": 1709,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_bytes32_fromMemory": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 1613,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_array$_t_bytes32_$dyn_storage__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
				"entryPoint": 1638,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bytes32_t_bytes32_t_stringliteral_9d0a036e342752e0d6e8cbc4347e24a3292eb90ba73a22c6e51429d5bd6c9d72__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_library_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1750,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_25f45ce586eb78cde7fcdbcae61fb894722d038b7e11980d539030009c6562e9__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_library_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:3453:4",
					"statements": [
						{
							"nodeType": "YulBlock",
							"src": "6:3:4",
							"statements": []
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "109:92:4",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "119:26:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "131:9:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "142:2:4",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "127:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "127:18:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "119:4:4"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "161:9:4"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "186:6:4"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "179:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "179:14:4"
														}
													],
													"functionName": {
														"name": "iszero",
														"nodeType": "YulIdentifier",
														"src": "172:6:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "172:22:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "154:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "154:41:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "154:41:4"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "78:9:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "89:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "100:4:4",
									"type": ""
								}
							],
							"src": "14:187:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "287:103:4",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "333:16:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "342:1:4",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "345:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "335:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "335:12:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "335:12:4"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "308:7:4"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "317:9:4"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "304:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "304:23:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "329:2:4",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "300:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "300:32:4"
										},
										"nodeType": "YulIf",
										"src": "297:52:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "358:26:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "374:9:4"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "368:5:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "368:16:4"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "358:6:4"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "253:9:4",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "264:7:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "276:6:4",
									"type": ""
								}
							],
							"src": "206:184:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "543:507:4",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "553:12:4",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "563:2:4",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "557:2:4",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "574:32:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "592:9:4"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "603:2:4"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "588:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "588:18:4"
										},
										"variables": [
											{
												"name": "tail_1",
												"nodeType": "YulTypedName",
												"src": "578:6:4",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "622:9:4"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "633:2:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "615:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "615:21:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "615:21:4"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "645:17:4",
										"value": {
											"name": "tail_1",
											"nodeType": "YulIdentifier",
											"src": "656:6:4"
										},
										"variables": [
											{
												"name": "pos",
												"nodeType": "YulTypedName",
												"src": "649:3:4",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "671:27:4",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "691:6:4"
												}
											],
											"functionName": {
												"name": "sload",
												"nodeType": "YulIdentifier",
												"src": "685:5:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "685:13:4"
										},
										"variables": [
											{
												"name": "length",
												"nodeType": "YulTypedName",
												"src": "675:6:4",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "tail_1",
													"nodeType": "YulIdentifier",
													"src": "714:6:4"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "722:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "707:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "707:22:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "707:22:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "738:25:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "749:9:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "760:2:4",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "745:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "745:18:4"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "738:3:4"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "779:1:4",
													"type": "",
													"value": "0"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "782:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "772:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "772:17:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "772:17:4"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "798:30:4",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "822:1:4",
													"type": "",
													"value": "0"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "825:2:4"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nodeType": "YulIdentifier",
												"src": "812:9:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "812:16:4"
										},
										"variables": [
											{
												"name": "srcPtr",
												"nodeType": "YulTypedName",
												"src": "802:6:4",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "837:10:4",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "846:1:4",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "841:1:4",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "905:119:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "926:3:4"
															},
															{
																"arguments": [
																	{
																		"name": "srcPtr",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:4"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "919:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "919:26:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "919:26:4"
												},
												{
													"nodeType": "YulAssignment",
													"src": "958:19:4",
													"value": {
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "969:3:4"
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "974:2:4"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "965:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "965:12:4"
													},
													"variableNames": [
														{
															"name": "pos",
															"nodeType": "YulIdentifier",
															"src": "958:3:4"
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "990:24:4",
													"value": {
														"arguments": [
															{
																"name": "srcPtr",
																"nodeType": "YulIdentifier",
																"src": "1004:6:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1012:1:4",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1000:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1000:14:4"
													},
													"variableNames": [
														{
															"name": "srcPtr",
															"nodeType": "YulIdentifier",
															"src": "990:6:4"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "867:1:4"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "870:6:4"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "864:2:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "864:13:4"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "878:18:4",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "880:14:4",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "889:1:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "892:1:4",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "885:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "885:9:4"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "880:1:4"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "860:3:4",
											"statements": []
										},
										"src": "856:168:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1033:11:4",
										"value": {
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "1041:3:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1033:4:4"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_storage__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "512:9:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "523:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "534:4:4",
									"type": ""
								}
							],
							"src": "395:655:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1164:76:4",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1174:26:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1186:9:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1197:2:4",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1182:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1182:18:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1174:4:4"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1216:9:4"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1227:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1209:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1209:25:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1209:25:4"
									}
								]
							},
							"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1133:9:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1144:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1155:4:4",
									"type": ""
								}
							],
							"src": "1055:185:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1483:328:4",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1500:9:4"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1511:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1493:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1493:25:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1493:25:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1538:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1549:2:4",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1534:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1534:18:4"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1554:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1527:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1527:34:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1527:34:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1581:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1592:2:4",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1577:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1577:18:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1597:2:4",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1570:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1570:30:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1570:30:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1620:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1631:2:4",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1616:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1616:18:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1636:2:4",
													"type": "",
													"value": "50"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1609:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1609:30:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1609:30:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1659:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1670:3:4",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1655:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1655:19:4"
												},
												{
													"hexValue": "70726f706f73616c20617420696e64657820302073686f756c64206265207468",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "1676:34:4",
													"type": "",
													"value": "proposal at index 0 should be th"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1648:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1648:63:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1648:63:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1731:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1742:3:4",
															"type": "",
															"value": "160"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1727:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1727:19:4"
												},
												{
													"hexValue": "652077696e6e696e672070726f706f73616c",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "1748:20:4",
													"type": "",
													"value": "e winning proposal"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1720:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1720:49:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1720:49:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1778:27:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1790:9:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1801:3:4",
													"type": "",
													"value": "192"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1786:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1786:19:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1778:4:4"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_25f45ce586eb78cde7fcdbcae61fb894722d038b7e11980d539030009c6562e9__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_library_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1444:9:4",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "1455:6:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1463:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1474:4:4",
									"type": ""
								}
							],
							"src": "1245:566:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1894:199:4",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1940:16:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1949:1:4",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1952:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "1942:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1942:12:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1942:12:4"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1915:7:4"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1924:9:4"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1911:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "1911:23:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1936:2:4",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1907:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1907:32:4"
										},
										"nodeType": "YulIf",
										"src": "1904:52:4"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1965:29:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1984:9:4"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1978:5:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "1978:16:4"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "1969:5:4",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2047:16:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2056:1:4",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2059:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2049:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "2049:12:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2049:12:4"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "2016:5:4"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "2037:5:4"
																		}
																	],
																	"functionName": {
																		"name": "iszero",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:4"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2030:13:4"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "2023:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "2023:21:4"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "2013:2:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2013:32:4"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2006:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2006:40:4"
										},
										"nodeType": "YulIf",
										"src": "2003:60:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2072:15:4",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "2082:5:4"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2072:6:4"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bool_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1860:9:4",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1871:7:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1883:6:4",
									"type": ""
								}
							],
							"src": "1816:277:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2179:103:4",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2225:16:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2234:1:4",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2237:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2227:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "2227:12:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2227:12:4"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2200:7:4"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2209:9:4"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "2196:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2196:23:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2221:2:4",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "2192:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2192:32:4"
										},
										"nodeType": "YulIf",
										"src": "2189:52:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2250:26:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2266:9:4"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2260:5:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2260:16:4"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2250:6:4"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bytes32_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2145:9:4",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "2156:7:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2168:6:4",
									"type": ""
								}
							],
							"src": "2098:184:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2525:314:4",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2542:9:4"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "2553:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2535:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2535:25:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2535:25:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2580:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2591:2:4",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2576:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2576:18:4"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "2596:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2569:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2569:34:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2569:34:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2623:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2634:2:4",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2619:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2619:18:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2639:2:4",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2612:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2612:30:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2612:30:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2662:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2673:2:4",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2658:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2658:18:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2678:2:4",
													"type": "",
													"value": "36"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2651:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2651:30:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2651:30:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2701:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2712:3:4",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2697:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2697:19:4"
												},
												{
													"hexValue": "63616e646964617465312073686f756c64206265207468652077696e6e657220",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "2718:34:4",
													"type": "",
													"value": "candidate1 should be the winner "
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2690:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2690:63:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2690:63:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2773:9:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2784:3:4",
															"type": "",
															"value": "160"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2769:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "2769:19:4"
												},
												{
													"hexValue": "6e616d65",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "2790:6:4",
													"type": "",
													"value": "name"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2762:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2762:35:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2762:35:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2806:27:4",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2818:9:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2829:3:4",
													"type": "",
													"value": "192"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "2814:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2814:19:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "2806:4:4"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_stringliteral_9d0a036e342752e0d6e8cbc4347e24a3292eb90ba73a22c6e51429d5bd6c9d72__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_library_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2486:9:4",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "2497:6:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2505:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "2516:4:4",
									"type": ""
								}
							],
							"src": "2287:552:4"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2965:486:4",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2975:12:4",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "2985:2:4",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "2979:2:4",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3003:9:4"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "3014:2:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2996:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "2996:21:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2996:21:4"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3026:27:4",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "3046:6:4"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "3040:5:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "3040:13:4"
										},
										"variables": [
											{
												"name": "length",
												"nodeType": "YulTypedName",
												"src": "3030:6:4",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3073:9:4"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "3084:2:4"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3069:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "3069:18:4"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "3089:6:4"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3062:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "3062:34:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3062:34:4"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3105:10:4",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "3114:1:4",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "3109:1:4",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3174:90:4",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:4"
																			},
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3214:1:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:17:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3218:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:26:4"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:6:4"
																					},
																					{
																						"name": "i",
																						"nodeType": "YulIdentifier",
																						"src": "3245:1:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3233:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:14:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3249:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3223:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:30:4"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "3188:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "3188:66:4"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3188:66:4"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "3135:1:4"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "3138:6:4"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "3132:2:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "3132:13:4"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "3146:19:4",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "3148:15:4",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "3157:1:4"
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "3160:2:4"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3153:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "3153:10:4"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "3148:1:4"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "3128:3:4",
											"statements": []
										},
										"src": "3124:140:4"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "3288:9:4"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:4"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "3284:3:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "3284:22:4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3308:2:4",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3280:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "3280:31:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3313:1:4",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3273:6:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "3273:42:4"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3273:42:4"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3324:121:4",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3340:9:4"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "3359:6:4"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3367:2:4",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "3355:3:4"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "3355:15:4"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3372:66:4",
																	"type": "",
																	"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "3351:3:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "3351:88:4"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3336:3:4"
													},
													"nodeType": "YulFunctionCall",
													"src": "3336:104:4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3442:2:4",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3332:3:4"
											},
											"nodeType": "YulFunctionCall",
											"src": "3332:113:4"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3324:4:4"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2934:9:4",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2945:6:4",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "2956:4:4",
									"type": ""
								}
							],
							"src": "2844:607:4"
						}
					]
				},
				"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_storage__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := sload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        mstore(0, value0)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_25f45ce586eb78cde7fcdbcae61fb894722d038b7e11980d539030009c6562e9__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 50)\n        mstore(add(headStart, 128), \"proposal at index 0 should be th\")\n        mstore(add(headStart, 160), \"e winning proposal\")\n        tail := add(headStart, 192)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_stringliteral_9d0a036e342752e0d6e8cbc4347e24a3292eb90ba73a22c6e51429d5bd6c9d72__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 36)\n        mstore(add(headStart, 128), \"candidate1 should be the winner \")\n        mstore(add(headStart, 160), \"name\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
				"id": 4,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {
			"remix_tests.sol": {
				"Assert": [
					{
						"length": 20,
						"start": 671
					},
					{
						"length": 20,
						"start": 1060
					}
				]
			}
		},
		"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633439c57b146100465780637fea0d4b14610062578063ed2bee101461006c575b600080fd5b61004e610074565b604051901515815260200160405180910390f35b61006a61010e565b005b61006a6101db565b600154604080517f609ff1bd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163609ff1bd9160048083019260209291908290030181865afa1580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610108919061064d565b15919050565b600080546001810182558180527f63616e64696461746531000000000000000000000000000000000000000000007f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015560405161016d90610640565b6101779190610666565b604051809103906000f080158015610193573d6000803e3d6000fd5b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6102196040518060400160405280601c81526020017f52756e6e696e6720636865636b57696e6e696e6750726f706f73616c000000008152506105b3565b6001546040517f0121b93f0000000000000000000000000000000000000000000000000000000081526000600482015273ffffffffffffffffffffffffffffffffffffffff90911690630121b93f90602401600060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b5050505073__$acbfb1c35000d78352310b16a054a6b106$__63abcd7960600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663609ff1bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061064d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091526000602482015260606044820152603260648201527f70726f706f73616c20617420696e64657820302073686f756c6420626520746860848201527f652077696e6e696e672070726f706f73616c000000000000000000000000000060a482015260c401602060405180830381865af41580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906106ad565b5073__$acbfb1c35000d78352310b16a054a6b106$__63ea79dd79600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2ba53f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd919061064d565b7f63616e64696461746531000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161056f92919091825260208201526060604082018190526024908201527f63616e646964617465312073686f756c64206265207468652077696e6e65722060808201527f6e616d650000000000000000000000000000000000000000000000000000000060a082015260c00190565b602060405180830381865af415801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b091906106ad565b50565b6105b0816040516024016105c791906106d6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610a238061072583390190565b60006020828403121561065f57600080fd5b5051919050565b6020808252825482820181905260008481528281209092916040850190845b818110156106a157835483526001938401939285019201610685565b50909695505050505050565b6000602082840312156106bf57600080fd5b815180151581146106cf57600080fd5b9392505050565b600060208083528351808285015260005b81811015610703578581018301518582016040015282016106e7565b506000604082860101526040601f19601f830116850101925050509291505056fe608060405234801561001057600080fd5b50604051610a23380380610a2383398101604081905261002f916100e2565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a61019f565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd816101b5565b915050610052565b50506101dc565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326100cc565b8060051b604051601f19603f83011681018181108582111715610157576101576100cc565b60405291825284820192508381018501918883111561017557600080fd5b938501935b828510156101935784518452938501939285019261017a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101d557634e487b7160e01b600052601160045260246000fd5b5060010190565b610838806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461070a565b6101af565b005b6100b56100b036600461070a565b6102df565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a0610108366004610723565b61030d565b61011561052d565b6040519081526020016100c6565b6100a0610131366004610723565b6105aa565b610178610144366004610723565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6101156106d7565b33600090815260016020526040812080549091036102145760405162461bcd60e51b815260206004820152601460248201527f486173206e6f20726967687420746f20766f746500000000000000000000000060448201526064015b60405180910390fd5b600181015460ff16156102695760405162461bcd60e51b815260206004820152600e60248201527f416c726561647920766f7465642e000000000000000000000000000000000000604482015260640161020b565b600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600280820183905581548154909190849081106102b6576102b6610753565b906000526020600020906002020160010160008282546102d691906107b1565b90915550505050565b600281815481106102ef57600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103735760405162461bcd60e51b815260206004820152601260248201527f596f7520616c726561647920766f7465642e0000000000000000000000000000604482015260640161020b565b336001600160a01b038316036103cb5760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000604482015260640161020b565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561046f576001600160a01b039182166000908152600160208190526040909120015461010090049091169033820361046a5760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000604482015260640161020b565b6103cb565b600181810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff161561050e578154600282810154815481106104e3576104e3610753565b9060005260206000209060020201600101600082825461050391906107b1565b909155506105289050565b8154815482906000906105229084906107b1565b90915550505b505050565b600080805b6002548110156105a557816002828154811061055057610550610753565b9060005260206000209060020201600101541115610593576002818154811061057b5761057b610753565b90600052602060002090600202016001015491508092505b8061059d816107ca565b915050610532565b505090565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e000000000000000000000000000000000000000000000000606482015260840161020b565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106975760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e0000000000000000604482015260640161020b565b6001600160a01b038116600090815260016020526040902054156106ba57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106e361052d565b815481106106f3576106f3610753565b906000526020600020906002020160000154905090565b60006020828403121561071c57600080fd5b5035919050565b60006020828403121561073557600080fd5b81356001600160a01b038116811461074c57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107c4576107c4610782565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107fb576107fb610782565b506001019056fea2646970667358221220db3f4386e97bb8331c656fd0f95bfc4aa69377de5207da01ac32f66a1d1871ae64736f6c63430008130033a2646970667358221220d0b820754b1b789746a5928af4c0bdea35f755ec6d38d20a6fa1ce6f19d1b49864736f6c63430008130033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3439C57B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xED2BEE10 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A PUSH2 0x10E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x609FF1BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x609FF1BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x63616E6469646174653100000000000000000000000000000000000000000000 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH2 0x16D SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x219 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52756E6E696E6720636865636B57696E6E696E6750726F706F73616C00000000 DUP2 MSTORE POP PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x121B93F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x121B93F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x299 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x0 PUSH4 0xABCD7960 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x609FF1BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x324 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x70726F706F73616C20617420696E64657820302073686F756C64206265207468 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x652077696E6E696E672070726F706F73616C0000000000000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x6AD JUMP JUMPDEST POP PUSH20 0x0 PUSH4 0xEA79DD79 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BA53F0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH32 0x63616E6469646174653100000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E646964617465312073686F756C64206265207468652077696E6E657220 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6E616D6500000000000000000000000000000000000000000000000000000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x6AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x41304FAC00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA23 DUP1 PUSH2 0x725 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 SLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP2 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI DUP4 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 ADD PUSH2 0x685 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x703 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA23 CODESIZE SUB DUP1 PUSH2 0xA23 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x19F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xBD DUP2 PUSH2 0x1B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x1DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH2 0x132 PUSH2 0xCC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x157 JUMPI PUSH2 0x157 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x193 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x17A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4
 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x838 DUP1 PUSH2 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x115 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x6D7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486173206E6F20726967687420746F20766F7465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F7465642E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x46F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50E JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x528 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x522 SWAP1 DUP5 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5A5 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x593 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x59D DUP2 PUSH2 0x7CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x532 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6E3 PUSH2 0x52D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6F3 JUMPI PUSH2 0x6F3 PUSH2 0x753 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7C4 JUMPI PUSH2 0x7C4 PUSH2 0x782 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x782 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTCODEHASH NUMBER DUP7 0xE9 PUSH28 0xB8331C656FD0F95BFC4AA69377DE5207DA01AC32F66A1D1871AE6473
 PUSH16 0x6C63430008130033A264697066735822 SLT KECCAK256 0xD0 0xB8 KECCAK256 PUSH22 0x4B1B789746A5928AF4C0BDEA35F755EC6D38D20A6FA1 0xCE PUSH16 0x19D1B49864736F6C6343000813003300 ",
		"sourceMap": "213:725:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:133;;;:::i;:::-;;;179:14:4;;172:22;154:41;;142:2;127:18;803:133:3;;;;;;;295:137;;;:::i;:::-;;438:359;;;:::i;803:133::-;894:12;;:30;;;;;;;;871:4;;894:12;;;:28;;:30;;;;;;;;;;;;;;:12;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;803:133;-1:-1:-1;803:133:3:o;295:137::-;334:13;:41;;;;;;;;;;353:21;334:41;;;;;400:25;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;385:12:3;:40;;;;;;;;;;;;;;;295:137::o;438:359::-;488:43;;;;;;;;;;;;;;;;;;:11;:43::i;:::-;541:12;;:20;;;;;:12;:20;;;1209:25:4;541:12:3;;;;;:17;;1182:18:4;;541:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:6;:12;584;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:107;;;;;;;;;;;;;1493:25:4;;;;621:1:3;1534:18:4;;;1527:34;1597:2;1577:18;;;1570:30;1636:2;1616:18;;;1609:30;1676:34;1655:19;;;1648:63;1748:20;1727:19;;;1720:49;1786:19;;571:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;688:6;:12;701;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;728:21;688:102;;;;;;;;;;;;;;;2535:25:4;;;2591:2;2576:18;;2569:34;2639:2;2634;2619:18;;2612:30;;;2678:2;2658:18;;;2651:30;2718:34;2712:3;2697:19;;2690:63;2790:6;2784:3;2769:19;;2762:35;2829:3;2814:19;;2287:552;688:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;438:359::o;5072:112:1:-;5121:59;5176:2;5137:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5137:42:1;;;;;;;;;;;;;;;;;;;;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;-1:-1:-1:-;;;;;;;;:::o;206:184:4:-;276:6;329:2;317:9;308:7;304:23;300:32;297:52;;;345:1;342;335:12;297:52;-1:-1:-1;368:16:4;;206:184;-1:-1:-1;206:184:4:o;395:655::-;563:2;615:21;;;685:13;;588:18;;;707:22;;;534:4;772:17;;;812:16;;;534:4;;563:2;760;745:18;;;534:4;856:168;870:6;867:1;864:13;856:168;;;931:13;;919:26;;1012:1;1000:14;;;;965:12;;;;885:9;856:168;;;-1:-1:-1;1041:3:4;;395:655;-1:-1:-1;;;;;;395:655:4:o;1816:277::-;1883:6;1936:2;1924:9;1915:7;1911:23;1907:32;1904:52;;;1952:1;1949;1942:12;1904:52;1984:9;1978:16;2037:5;2030:13;2023:21;2016:5;2013:32;2003:60;;2059:1;2056;2049:12;2003:60;2082:5;1816:277;-1:-1:-1;;;1816:277:4:o;2844:607::-;2956:4;2985:2;3014;3003:9;2996:21;3046:6;3040:13;3089:6;3084:2;3073:9;3069:18;3062:34;3114:1;3124:140;3138:6;3135:1;3132:13;3124:140;;;3233:14;;;3229:23;;3223:30;3199:17;;;3218:2;3195:26;3188:66;3153:10;;3124:140;;;3128:3;3313:1;3308:2;3299:6;3288:9;3284:22;3280:31;3273:42;3442:2;-1:-1:-1;;3367:2:4;3359:6;3355:15;3351:88;3340:9;3336:104;3332:113;3324:121;;;;2844:607;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH 40\t\t\tcontract BallotTest {\\n\\n    b...\n  MSTORE \t\t\tcontract BallotTest {\\n\\n    b...\n  CALLVALUE \t\t\tcontract BallotTest {\\n\\n    b...\n  DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n  ISZERO \t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH [tag] 1\t\t\tcontract BallotTest {\\n\\n    b...\n  JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n  DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n  REVERT \t\t\tcontract BallotTest {\\n\\n    b...\ntag 1\t\t\tcontract BallotTest {\\n\\n    b...\n  JUMPDEST \t\t\tcontract BallotTest {\\n\\n    b...\n  POP \t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BallotTest {\\n\\n    b...\n  DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n  CODECOPY \t\t\tcontract BallotTest {\\n\\n    b...\n  PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n  RETURN \t\t\tcontract BallotTest {\\n\\n    b...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 40\t\t\tcontract BallotTest {\\n\\n    b...\n      MSTORE \t\t\tcontract BallotTest {\\n\\n    b...\n      CALLVALUE \t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      ISZERO \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH [tag] 1\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      REVERT \t\t\tcontract BallotTest {\\n\\n    b...\n    tag 1\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPDEST \t\t\tcontract BallotTest {\\n\\n    b...\n      POP \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 4\t\t\tcontract BallotTest {\\n\\n    b...\n      CALLDATASIZE \t\t\tcontract BallotTest {\\n\\n    b...\n      LT \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH [tag] 2\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n      CALLDATALOAD \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH E0\t\t\tcontract BallotTest {\\n\\n    b...\n      SHR \t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 3439C57B\t\t\tcontract BallotTest {\\n\\n    b...\n      EQ \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH [tag] 3\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 7FEA0D4B\t\t\tcontract BallotTest {\\n\\n    b...\n      EQ \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH [tag] 4\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH ED2BEE10\t\t\tcontract BallotTest {\\n\\n    b...\n      EQ \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH [tag] 5\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPI \t\t\tcontract BallotTest {\\n\\n    b...\n    tag 2\t\t\tcontract BallotTest {\\n\\n    b...\n      JUMPDEST \t\t\tcontract BallotTest {\\n\\n    b...\n      PUSH 0\t\t\tcontract BallotTest {\\n\\n    b...\n      DUP1 \t\t\tcontract BallotTest {\\n\\n    b...\n      REVERT \t\t\tcontract BallotTest {\\n\\n    b...\n    tag 3\t\t\tfunction checkWinninProposalWi...\n      JUMPDEST \t\t\tfunction checkWinninProposalWi...\n      PUSH [tag] 6\t\t\tfunction checkWinninProposalWi...\n      PUSH [tag] 7\t\t\tfunction checkWinninProposalWi...\n      JUMP \t\t\tfunction checkWinninProposalWi...\n    tag 6\t\t\tfunction checkWinninProposalWi...\n      JUMPDEST \t\t\tfunction checkWinninProposalWi...\n      PUSH 40\t\t\tfunction checkWinninProposalWi...\n      MLOAD \t\t\tfunction checkWinninProposalWi...\n      SWAP1 \t\t\tort \"../contra\n      ISZERO \t\t\tort \"../contra\n      ISZERO \t\t\tl\";\\nimport \"../contrac\n      DUP2 \t\t\thardhat/console.sol\";\\nimport ...\n      MSTORE \t\t\thardhat/console.sol\";\\nimport ...\n      PUSH 20\t\t\tix\n      ADD \t\t\tinjected by Remix.\n      PUSH 40\t\t\tfunction checkWinninProposalWi...\n      MLOAD \t\t\tfunction checkWinninProposalWi...\n      DUP1 \t\t\tfunction checkWinninProposalWi...\n      SWAP2 \t\t\tfunction checkWinninProposalWi...\n      SUB \t\t\tfunction checkWinninProposalWi...\n      SWAP1 \t\t\tfunction checkWinninProposalWi...\n      RETURN \t\t\tfunction checkWinninProposalWi...\n    tag 4\t\t\tfunction beforeAll () public {...\n      JUMPDEST \t\t\tfunction beforeAll () public {...\n      PUSH [tag] 10\t\t\tfunction beforeAll () public {...\n      PUSH [tag] 11\t\t\tfunction beforeAll () public {...\n      JUMP \t\t\tfunction beforeAll () public {...\n    tag 10\t\t\tfunction beforeAll () public {...\n      JUMPDEST \t\t\tfunction beforeAll () public {...\n      STOP \t\t\tfunction beforeAll () public {...\n    tag 5\t\t\tfunction checkWinningProposal ...\n      JUMPDEST \t\t\tfunction checkWinningProposal ...\n      PUSH [tag] 10\t\t\tfunction checkWinningProposal ...\n      PUSH [tag] 13\t\t\tfunction checkWinningProposal ...\n      JUMP \t\t\tfunction checkWinningProposal ...\n    tag 7\t\t\tfunction checkWinninProposalWi...\n      JUMPDEST \t\t\tfunction checkWinninProposalWi...\n      PUSH 1\t\t\tballotToTest\n      SLOAD \t\t\tballotToTest\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      PUSH 609FF1BD00000000000000000000000000000000000000000000000000000000\t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      MSTORE \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      PUSH 0\t\t\tbool\n      SWAP3 \t\t\tbool\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest\n      AND \t\t\tballotToTest\n      SWAP2 \t\t\tballotToTest\n      PUSH 609FF1BD\t\t\tballotToTest.winningProposal\n      SWAP2 \t\t\tballotToTest.winningProposal\n      PUSH 4\t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      DUP4 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      SWAP3 \t\t\tballotToTest.winningProposal()\n      PUSH 20\t\t\tballotToTest.winningProposal()\n      SWAP3 \t\t\tballotToTest.winningProposal()\n      SWAP2 \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      DUP3 \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      SUB \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      DUP7 \t\t\tballotToTest\n      GAS \t\t\tballotToTest.winningProposal()\n      STATICCALL \t\t\tballotToTest.winningProposal()\n      ISZERO \t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      ISZERO \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 16\t\t\tballotToTest.winningProposal()\n      JUMPI \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 0\t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      RETURNDATACOPY \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 0\t\t\tballotToTest.winningProposal()\n      REVERT \t\t\tballotToTest.winningProposal()\n    tag 16\t\t\tballotToTest.winningProposal()\n      JUMPDEST \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 1F\t\t\tballotToTest.winningProposal()\n      NOT \t\t\tballotToTest.winningProposal()\n      PUSH 1F\t\t\tballotToTest.winningProposal()\n      DUP3 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      AND \t\t\tballotToTest.winningProposal()\n      DUP3 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MSTORE \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 17\t\t\tballotToTest.winningProposal()\n      SWAP2 \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 18\t\t\tballotToTest.winningProposal()\n      JUMP \t\t\tballotToTest.winningProposal()\n    tag 17\t\t\tballotToTest.winningProposal()\n      JUMPDEST \t\t\tballotToTest.winningProposal()\n      ISZERO \t\t\tballotToTest.winningProposal()...\n      SWAP2 \t\t\tballotToTest.winningProposal()...\n      SWAP1 \t\t\tfunction checkWinninProposalWi...\n      POP \t\t\t\n      JUMP \t\t\tfunction checkWinninProposalWi...\n    tag 11\t\t\tfunction beforeAll () public {...\n      JUMPDEST \t\t\tfunction beforeAll () public {...\n      PUSH 0\t\t\tproposalNames\n      DUP1 \t\t\tproposalNames.push(bytes32(\"ca...\n
      SLOAD \t\t\tproposalNames.push(bytes32(\"ca...\n      PUSH 1\t\t\tproposalNames.push(bytes32(\"ca...\n      DUP2 \t\t\tproposalNames.push(bytes32(\"ca...\n      ADD \t\t\tproposalNames.push(bytes32(\"ca...\n      DUP3 \t\t\tproposalNames.push(bytes32(\"ca...\n      SSTORE \t\t\tproposalNames.push(bytes32(\"ca...\n      DUP2 \t\t\tproposalNames.push(bytes32(\"ca...\n      DUP1 \t\t\tproposalNames.push(bytes32(\"ca...\n      MSTORE \t\t\tproposalNames.push(bytes32(\"ca...\n      PUSH 63616E6469646174653100000000000000000000000000000000000000000000\t\t\tbytes32(\"candidate1\")\n      PUSH 290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563\t\t\tproposalNames.push(bytes32(\"ca...\n      SWAP1 \t\t\tproposalNames.push(bytes32(\"ca...\n      SWAP2 \t\t\tproposalNames.push(bytes32(\"ca...\n      ADD \t\t\tproposalNames.push(bytes32(\"ca...\n      SSTORE \t\t\tproposalNames.push(bytes32(\"ca...\n      PUSH 40\t\t\tnew Ballot(proposalNames)\n      MLOAD \t\t\tnew Ballot(proposalNames)\n      PUSH [tag] 21\t\t\tnew Ballot(proposalNames)\n      SWAP1 \t\t\tnew Ballot(proposalNames)\n      PUSH [tag] 22\t\t\tnew Ballot(proposalNames)\n      JUMP \t\t\tnew Ballot(proposalNames)\n    tag 21\t\t\tnew Ballot(proposalNames)\n      JUMPDEST \t\t\tnew Ballot(proposalNames)\n      PUSH [tag] 23\t\t\tnew Ballot(proposalNames)\n      SWAP2 \t\t\tnew Ballot(proposalNames)\n      SWAP1 \t\t\tnew Ballot(proposalNames)\n      PUSH [tag] 24\t\t\tnew Ballot(proposalNames)\n      JUMP \t\t\tnew Ballot(proposalNames)\n    tag 23\t\t\tnew Ballot(proposalNames)\n      JUMPDEST \t\t\tnew Ballot(proposalNames)\n      PUSH 40\t\t\tnew Ballot(proposalNames)\n      MLOAD \t\t\tnew Ballot(proposalNames)\n      DUP1 \t\t\tnew Ballot(proposalNames)\n      SWAP2 \t\t\tnew Ballot(proposalNames)\n      SUB \t\t\tnew Ballot(proposalNames)\n      SWAP1 \t\t\tnew Ballot(proposalNames)\n      PUSH 0\t\t\tnew Ballot(proposalNames)\n      CREATE \t\t\tnew Ballot(proposalNames)\n      DUP1 \t\t\tnew Ballot(proposalNames)\n      ISZERO \t\t\tnew Ballot(proposalNames)\n      DUP1 \t\t\tnew Ballot(proposalNames)\n      ISZERO \t\t\tnew Ballot(proposalNames)\n      PUSH [tag] 25\t\t\tnew Ballot(proposalNames)\n      JUMPI \t\t\tnew Ballot(proposalNames)\n      RETURNDATASIZE \t\t\tnew Ballot(proposalNames)\n      PUSH 0\t\t\tnew Ballot(proposalNames)\n      DUP1 \t\t\tnew Ballot(proposalNames)\n      RETURNDATACOPY \t\t\tnew Ballot(proposalNames)\n      RETURNDATASIZE \t\t\tnew Ballot(proposalNames)\n      PUSH 0\t\t\tnew Ballot(proposalNames)\n      REVERT \t\t\tnew Ballot(proposalNames)\n    tag 25\t\t\tnew Ballot(proposalNames)\n      JUMPDEST \t\t\tnew Ballot(proposalNames)\n      POP \t\t\t\n      PUSH 1\t\t\tballotToTest\n      DUP1 \t\t\tballotToTest = new Ballot(prop...\n      SLOAD \t\t\tballotToTest = new Ballot(prop...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000\t\t\tballotToTest = new Ballot(prop...\n      AND \t\t\tballotToTest = new Ballot(prop...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest = new Ballot(prop...\n      SWAP3 \t\t\tballotToTest = new Ballot(prop...\n      SWAP1 \t\t\tballotToTest = new Ballot(prop...\n      SWAP3 \t\t\tballotToTest = new Ballot(prop...\n      AND \t\t\tballotToTest = new Ballot(prop...\n      SWAP2 \t\t\tballotToTest = new Ballot(prop...\n      SWAP1 \t\t\tballotToTest = new Ballot(prop...\n      SWAP2 \t\t\tballotToTest = new Ballot(prop...\n      OR \t\t\tballotToTest = new Ballot(prop...\n      SWAP1 \t\t\tballotToTest = new Ballot(prop...\n      SSTORE \t\t\tballotToTest = new Ballot(prop...\n      JUMP \t\t\tfunction beforeAll () public {...\n    tag 13\t\t\tfunction checkWinningProposal ...\n      JUMPDEST \t\t\tfunction checkWinningProposal ...\n      PUSH [tag] 27\t\t\tconsole.log(\"Running checkWinn...\n      PUSH 40\t\t\tconsole.log(\"Running checkWinn...\n      MLOAD \t\t\tconsole.log(\"Running checkWinn...\n      DUP1 \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 40\t\t\tconsole.log(\"Running checkWinn...\n      ADD \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 40\t\t\tconsole.log(\"Running checkWinn...\n      MSTORE \t\t\tconsole.log(\"Running checkWinn...\n      DUP1 \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 1C\t\t\tconsole.log(\"Running checkWinn...\n      DUP2 \t\t\tconsole.log(\"Running checkWinn...\n      MSTORE \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 20\t\t\tconsole.log(\"Running checkWinn...\n      ADD \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 52756E6E696E6720636865636B57696E6E696E6750726F706F73616C00000000\t\t\tconsole.log(\"Running checkWinn...\n      DUP2 \t\t\tconsole.log(\"Running checkWinn...\n      MSTORE \t\t\tconsole.log(\"Running checkWinn...\n      POP \t\t\tconsole.log(\"Running checkWinn...\n      PUSH [tag] 28\t\t\tconsole.log\n      JUMP \t\t\tconsole.log(\"Running checkWinn...\n    tag 27\t\t\tconsole.log(\"Running checkWinn...\n      JUMPDEST \t\t\tconsole.log(\"Running checkWinn...\n      PUSH 1\t\t\tballotToTest\n      SLOAD \t\t\tballotToTest\n      PUSH 40\t\t\tballotToTest.vote(0)\n      MLOAD \t\t\tballotToTest.vote(0)\n      PUSH 121B93F00000000000000000000000000000000000000000000000000000000\t\t\tballotToTest.vote(0)\n      DUP2 \t\t\tballotToTest.vote(0)\n      MSTORE \t\t\tballotToTest.vote(0)\n      PUSH 0\t\t\tballotToTest\n      PUSH 4\t\t\tballotToTest.vote(0)\n      DUP3 \t\t\tballotToTest.vote(0)\n      ADD \t\t\tballotToTest.vote(0)\n      MSTORE \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      SWAP2 \t\t\tballotToTest\n      AND \t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      PUSH 121B93F\t\t\tballotToTest.vote\n      SWAP1 \t\t\tballotToTest.vote\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\tballotToTest.vote(0)\n      PUSH 40\t\t\tballotToTest.vote(0)\n      MLOAD \t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      DUP4 \t\t\tballotToTest.vote(0)\n      SUB \t\t\tballotToTest.vote(0)\n      DUP2 \t\t\tballotToTest.vote(0)\n      PUSH 0\t\t\tballotToTest.vote(0)\n      DUP8 \t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      EXTCODESIZE \t\t\tballotToTest.vote(0)\n      ISZERO \t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      ISZERO \t\t\tballotToTest.vote(0)\n      PUSH [tag] 31\t\t\tballotToTest.vote(0)\n      JUMPI \t\t\tballotToTest.vote(0)\n      PUSH 0\t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      REVERT \t\t\tballotToTest.vote(0)\n    tag 31\t\t\tballotToTest.vote(0)\n      JUMPDEST \t\t\tballotToTest.vote(0)\n      POP \t\t\tballotToTest.vote(0)\n      GAS \t\t\tballotToTest.vote(0)\n      CALL \t\t\tballotToTest.vote(0)\n      ISZERO \t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      ISZERO \t\t\tballotToTest.vote(0)\n      PUSH [tag] 33\t\t\tballotToTest.vote(0)\n      JUMPI \t\t\tballotToTest.vote(0)\n      RETURNDATASIZE \t\t\tballotToTest.vote(0)\n      PUSH 0\t\t\tballotToTest.vote(0)\n      DUP1 \t\t\tballotToTest.vote(0)\n      RETURNDATACOPY \t\t\tballotToTest.vote(0)\n      RETURNDATASIZE \t\t\tballotToTest.vote(0)\n      PUSH 0\t\t\tballotToTest.vote(0)\n      REVERT \t\t\tballotToTest.vote(0)\n    tag 33\t\t\tballotToTest.vote(0)\n      JUMPDEST \t\t\tballotToTest.vote(0)\n      POP \t\t\tballotToTest.vote(0)\n      POP \t\t\tballotToTest.vote(0)\n      POP \t\t\tballotToTest.vote(0)\n      POP \t\t\tballotToTest.vote(0)\n      PUSHLIB remix_tests.sol:Assert\t\t\tAssert\n      PUSH ABCD7960\t\t\tAssert.equal\n      PUSH 1\t\t\tballotToTest\n      PUSH 0\t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      SLOAD \t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      PUSH 100\t\t\tballotToTest\n      EXP \t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      DIV \t\t\tballotToTest\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest\n      AND \t\t\tballotToTest\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest.winningProposal\n      AND \t\t\tballotToTest.winningProposal\n      PUSH 609FF1BD\t\t\tballotToTest.winningProposal\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      PUSH FFFFFFFF\t\t\tballotToTest.winningProposal()\n      AND \t\t\tballotToTest.winningProposal()\n      PUSH E0\t\t\tballotToTest.winningProposal()\n      SHL \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      MSTORE \t\t\tballotToTest.winningProposal()\n      PUSH 4\t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      PUSH 20\t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      DUP4 \t\t\tballotToTest.winningProposal()\n      SUB \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      DUP7 \t\t\tballotToTest.winningProposal()\n      GAS \t\t\tballotToTest.winningProposal()\n      STATICCALL \t\t\tballotToTest.winningProposal()\n      ISZERO \t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      ISZERO \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 35\t\t\tballotToTest.winningProposal()\n      JUMPI \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 0\t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      RETURNDATACOPY \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 0\t\t\tballotToTest.winningProposal()\n      REVERT \t\t\tballotToTest.winningProposal()\n
    tag 35\t\t\tballotToTest.winningProposal()\n      JUMPDEST \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MLOAD \t\t\tballotToTest.winningProposal()\n      RETURNDATASIZE \t\t\tballotToTest.winningProposal()\n      PUSH 1F\t\t\tballotToTest.winningProposal()\n      NOT \t\t\tballotToTest.winningProposal()\n      PUSH 1F\t\t\tballotToTest.winningProposal()\n      DUP3 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      AND \t\t\tballotToTest.winningProposal()\n      DUP3 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      DUP1 \t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tballotToTest.winningProposal()\n      MSTORE \t\t\tballotToTest.winningProposal()\n      POP \t\t\tballotToTest.winningProposal()\n      DUP2 \t\t\tballotToTest.winningProposal()\n      ADD \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 36\t\t\tballotToTest.winningProposal()\n      SWAP2 \t\t\tballotToTest.winningProposal()\n      SWAP1 \t\t\tballotToTest.winningProposal()\n      PUSH [tag] 18\t\t\tballotToTest.winningProposal()\n      JUMP \t\t\tballotToTest.winningProposal()\n    tag 36\t\t\tballotToTest.winningProposal()\n      JUMPDEST \t\t\tballotToTest.winningProposal()\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH FFFFFFFF00000000000000000000000000000000000000000000000000000000\t\t\tAssert.equal(ballotToTest.winn...\n      PUSH E0\t\t\tAssert.equal(ballotToTest.winn...\n      DUP5 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      SHL \t\t\tAssert.equal(ballotToTest.winn...\n      AND \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      MSTORE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 4\t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t0\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 32\t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 70726F706F73616C20617420696E64657820302073686F756C64206265207468\t\t\t\n      PUSH 84\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 652077696E6E696E672070726F706F73616C0000000000000000000000000000\t\t\t\n      PUSH A4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH C4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      DUP4 \t\t\tAssert.equal(ballotToTest.winn...\n      SUB \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      DUP7 \t\t\tAssert.equal(ballotToTest.winn...\n      GAS \t\t\tAssert.equal(ballotToTest.winn...\n      DELEGATECALL \t\t\tAssert.equal(ballotToTest.winn...\n      ISZERO \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      ISZERO \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 40\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPI \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 0\t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATACOPY \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 0\t\t\tAssert.equal(ballotToTest.winn...\n      REVERT \t\t\tAssert.equal(ballotToTest.winn...\n    tag 40\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPDEST \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 1F\t\t\tAssert.equal(ballotToTest.winn...\n      NOT \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 1F\t\t\tAssert.equal(ballotToTest.winn...\n      DUP3 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      AND \t\t\tAssert.equal(ballotToTest.winn...\n      DUP3 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MSTORE \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 41\t\t\tAssert.equal(ballotToTest.winn...\n      SWAP2 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 42\t\t\tAssert.equal(ballotToTest.winn...\n      JUMP \t\t\tAssert.equal(ballotToTest.winn...\n    tag 41\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPDEST \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      PUSHLIB remix_tests.sol:Assert\t\t\tAssert\n      PUSH EA79DD79\t\t\tAssert.equal\n      PUSH 1\t\t\tballotToTest\n      PUSH 0\t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      SLOAD \t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      PUSH 100\t\t\tballotToTest\n      EXP \t\t\tballotToTest\n      SWAP1 \t\t\tballotToTest\n      DIV \t\t\tballotToTest\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest\n      AND \t\t\tballotToTest\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tballotToTest.winnerName\n      AND \t\t\tballotToTest.winnerName\n      PUSH E2BA53F0\t\t\tballotToTest.winnerName\n      PUSH 40\t\t\tballotToTest.winnerName()\n      MLOAD \t\t\tballotToTest.winnerName()\n      DUP2 \t\t\tballotToTest.winnerName()\n      PUSH FFFFFFFF\t\t\tballotToTest.winnerName()\n      AND \t\t\tballotToTest.winnerName()\n      PUSH E0\t\t\tballotToTest.winnerName()\n      SHL \t\t\tballotToTest.winnerName()\n      DUP2 \t\t\tballotToTest.winnerName()\n      MSTORE \t\t\tballotToTest.winnerName()\n      PUSH 4\t\t\tballotToTest.winnerName()\n      ADD \t\t\tballotToTest.winnerName()\n      PUSH 20\t\t\tballotToTest.winnerName()\n      PUSH 40\t\t\tballotToTest.winnerName()\n      MLOAD \t\t\tballotToTest.winnerName()\n      DUP1 \t\t\tballotToTest.winnerName()\n      DUP4 \t\t\tballotToTest.winnerName()\n      SUB \t\t\tballotToTest.winnerName()\n      DUP2 \t\t\tballotToTest.winnerName()\n      DUP7 \t\t\tballotToTest.winnerName()\n      GAS \t\t\tballotToTest.winnerName()\n      STATICCALL \t\t\tballotToTest.winnerName()\n      ISZERO \t\t\tballotToTest.winnerName()\n      DUP1 \t\t\tballotToTest.winnerName()\n      ISZERO \t\t\tballotToTest.winnerName()\n      PUSH [tag] 44\t\t\tballotToTest.winnerName()\n      JUMPI \t\t\tballotToTest.winnerName()\n      RETURNDATASIZE \t\t\tballotToTest.winnerName()\n      PUSH 0\t\t\tballotToTest.winnerName()\n      DUP1 \t\t\tballotToTest.winnerName()\n      RETURNDATACOPY \t\t\tballotToTest.winnerName()\n      RETURNDATASIZE \t\t\tballotToTest.winnerName()\n      PUSH 0\t\t\tballotToTest.winnerName()\n      REVERT \t\t\tballotToTest.winnerName()\n    tag 44\t\t\tballotToTest.winnerName()\n      JUMPDEST \t\t\tballotToTest.winnerName()\n      POP \t\t\tballotToTest.winnerName()\n      POP \t\t\tballotToTest.winnerName()\n      POP \t\t\tballotToTest.winnerName()\n      POP \t\t\tballotToTest.winnerName()\n      PUSH 40\t\t\tballotToTest.winnerName()\n      MLOAD \t\t\tballotToTest.winnerName()\n      RETURNDATASIZE \t\t\tballotToTest.winnerName()\n      PUSH 1F\t\t\tballotToTest.winnerName()\n      NOT \t\t\tballotToTest.winnerName()\n      PUSH 1F\t\t\tballotToTest.winnerName()\n      DUP3 \t\t\tballotToTest.winnerName()\n      ADD \t\t\tballotToTest.winnerName()\n      AND \t\t\tballotToTest.winnerName()\n      DUP3 \t\t\tballotToTest.winnerName()\n      ADD \t\t\tballotToTest.winnerName()\n      DUP1 \t\t\tballotToTest.winnerName()\n      PUSH 40\t\t\tballotToTest.winnerName()\n      MSTORE \t\t\tballotToTest.winnerName()\n      POP \t\t\tballotToTest.winnerName()\n      DUP2 \t\t\tballotToTest.winnerName()\n      ADD \t\t\tballotToTest.winnerName()\n      SWAP1 \t\t\tballotToTest.winnerName()\n      PUSH [tag] 45\t\t\tballotToTest.winnerName()\n      SWAP2 \t\t\tballotToTest.winnerName()\n      SWAP1 \t\t\tballotToTest.winnerName()\n      PUSH [tag] 18\t\t\tballotToTest.winnerName()\n      JUMP \t\t\tballotToTest.winnerName()\n    tag 45\t\t\tballotToTest.winnerName()\n      JUMPDEST \t\t\tballotToTest.winnerName()\n      PUSH 63616E6469646174653100000000000000000000000000000000000000000000\t\t\tbytes32(\"candidate1\")\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      DUP4 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH FFFFFFFF\t\t\tAssert.equal(ballotToTest.winn...\n      AND \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH
 E0\t\t\tAssert.equal(ballotToTest.winn...\n      SHL \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      MSTORE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 4\t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 47\t\t\tAssert.equal(ballotToTest.winn...\n      SWAP3 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP2 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 63616E646964617465312073686F756C64206265207468652077696E6E657220\t\t\t\n      PUSH 80\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6E616D6500000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH A0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH C0\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 47\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPDEST \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 20\t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      DUP4 \t\t\tAssert.equal(ballotToTest.winn...\n      SUB \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      DUP7 \t\t\tAssert.equal(ballotToTest.winn...\n      GAS \t\t\tAssert.equal(ballotToTest.winn...\n      DELEGATECALL \t\t\tAssert.equal(ballotToTest.winn...\n      ISZERO \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      ISZERO \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 50\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPI \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 0\t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATACOPY \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 0\t\t\tAssert.equal(ballotToTest.winn...\n      REVERT \t\t\tAssert.equal(ballotToTest.winn...\n    tag 50\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPDEST \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MLOAD \t\t\tAssert.equal(ballotToTest.winn...\n      RETURNDATASIZE \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 1F\t\t\tAssert.equal(ballotToTest.winn...\n      NOT \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 1F\t\t\tAssert.equal(ballotToTest.winn...\n      DUP3 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      AND \t\t\tAssert.equal(ballotToTest.winn...\n      DUP3 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      DUP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH 40\t\t\tAssert.equal(ballotToTest.winn...\n      MSTORE \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      DUP2 \t\t\tAssert.equal(ballotToTest.winn...\n      ADD \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 51\t\t\tAssert.equal(ballotToTest.winn...\n      SWAP2 \t\t\tAssert.equal(ballotToTest.winn...\n      SWAP1 \t\t\tAssert.equal(ballotToTest.winn...\n      PUSH [tag] 42\t\t\tAssert.equal(ballotToTest.winn...\n      JUMP \t\t\tAssert.equal(ballotToTest.winn...\n    tag 51\t\t\tAssert.equal(ballotToTest.winn...\n      JUMPDEST \t\t\tAssert.equal(ballotToTest.winn...\n      POP \t\t\tAssert.equal(ballotToTest.winn...\n      JUMP \t\t\tfunction checkWinningProposal ...\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 51\t\t\t\n      DUP2 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 54\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 55\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      DUP2 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 41304FAC00000000000000000000000000000000000000000000000000000000\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\\n\\n    Ballot b\n      MLOAD \t\t\t\\n\\n    Ballot b\n      PUSH 636F6E736F6C652E6C6F67\t\t\tjected by Remix.\\nimport \"hard...\n      PUSH 20\t\t\t))\n      DUP4 \t\t\t(\"candidate1\"));\n      ADD \t\t\t(\"candidate1\"));\n      PUSH 0\t\t\tbytes32[] proposalNam\n      DUP1 \t\t\tbytes32[] proposalNam\n      DUP5 \t\t\t\\n\\n    Ballot b\n      DUP4 \t\t\t(\"candidate1\"));\n      DUP6 \t\t\tjected by Remix.\\nimport \"hard...\n      GAS \t\t\tnew B\n      STATICCALL \t\t\totToTest = new Ballot(proposal...\n      POP \t\t\t     ballotToTest = new Ballot...\n      POP \t\t\t     ballotToTest = new Ballot...\n      POP \t\t\troposalNames.push(bytes32(\"can...\n      POP \t\t\troposalNames.push(bytes32(\"can...\n      POP \t\t\timport \"../contracts/3_Ballot....\n      JUMP \t\t\timport \"../contracts/3_Ballot....\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP1 \t\t\t\n      PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 18\t\t\tsol\";\\n\\ncontract BallotTest {...\n      JUMPDEST \t\t\tsol\";\\n\\ncontract BallotTest {...\n      PUSH 0\t\t\t ballo\n      PUSH 20\t\t\t  \n      DUP3 \t\t\tpublic {\\n\n      DUP5 \t\t\treAll (\n      SUB \t\t\tbeforeAll () public {\\n \n      SLT \t\t\tion beforeAll () public {\\n   ...\n      ISZERO \t\t\tnction beforeAll () public {\\n...\n      PUSH [tag] 61\t\t\tnction beforeAll () public {\\n...\n      JUMPI \t\t\tnction beforeAll () public {\\n...\n      PUSH 0\t\t\te\n      DUP1 \t\t\tN\n      REVERT \t\t\troposalNames\n    tag 61\t\t\tnction beforeAll () public {\\n...\n      JUMPDEST \t\t\tnction beforeAll () public {\\n...\n      POP \t\t\t\n      MLOAD \t\t\tate1\"));\\n       \n      SWAP2 \t\t\tate1\"));\\n       \n      SWAP1 \t\t\tsol\";\\n\\ncontract BallotTest {...\n      POP \t\t\t\n      JUMP \t\t\tsol\";\\n\\ncontract BallotTest {...\n    tag 24\t\t\tst = new Ballot(proposalNames)...\n      JUMPDEST \t\t\tst = new Ballot(proposalNames)...\n      PUSH 20\t\t\t  \n      DUP1 \t\t\t uint(0), \"proposal a\n      DUP3 \t\t\t uint(0), \"proposal a\n      MSTORE \t\t\t uint(0), \"proposal a\n      DUP3 \t\t\t   Assert.equ\n      SLOAD \t\t\t   Assert.equ\n      DUP3 \t\t\totToTest.winningPr\n      DUP3 \t\t\totToTest.winningPr\n      ADD \t\t\totToTest.winningPr\n      DUP2 \t\t\tToTest.winnerName(), b\n      SWAP1 \t\t\tToTest.winnerName(), b\n      MSTORE \t\t\tToTest.winnerName(), b\n      PUSH 0\t\t\t    \n      DUP5 \t\t\t the winner name\"\n      DUP2 \t\t\t the winner name\"\n      MSTORE \t\t\t the winner name\"\n      DUP3 \t\t\tcheckWinninPropo\n      DUP2 \t\t\tcheckWinninPropo\n      KECCAK256 \t\t\tcheckWinninPropo\n      SWAP1 \t\t\t    \n      SWAP3 \t\t\t    \n      SWAP2 \t\t\t  \n      PUSH 40\t\t\te1\n      DUP6 \t\t\te1\"), \"candidate1 \n      ADD \t\t\te1\"), \"candidate1 \n      SWAP1 \t\t\te1\"), \"candidate1 \n      DUP5 \t\t\t    \n    tag 63\t\t\t view returns (bool) {\\n      ...\n      JUMPDEST \t\t\t view returns (bool) {\\n      ...\n      DUP2 \t\t\t(bool)\n      DUP2 \t\t\tn\n      LT \t\t\tturns (bool) \n      ISZERO \t\t\t view returns (bool) {\\n      ...\n      PUSH [tag] 65\t\t\t view returns (bool) {\\n      ...\n      JUMPI \t\t\t view returns (bool) {\\n      ...\n      DUP4 \t\t\t    }\\n}\n      SLOAD \t\t\t    }\\n}\n      DUP4 \t\t\tsal() == 0;\\n    }\\n}\n      MSTORE \t\t\tsal() == 0;\\n    }\\n}\n      PUSH 1\t\t\t\n      SWAP4 \t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      ADD \t\t\t  return \n      PUSH [tag] 63\t\t\t view returns (bool) {\\n      ...\n      JUMP \t\t\t view returns (bool) {\\n      ...\n    tag 65\t\t\t view returns (bool) {\\n      ...\n      JUMPDEST \t\t\t view returns (bool) {\\n      ...\n      POP \t\t\t\n      SWAP1 \t\t\t\n      SWAP7 \t\t\t\n      SWAP6 \t\t\tst = new Ballot(proposalNames)...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\tst = new Ballot(proposalNames)...\n    tag 42\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 69\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 69\t\t\t\n      JUMPDEST
 \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 70\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 70\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      DUP4 \t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 77\t\t\t\n      JUMPI \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MLOAD \t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 75\t\t\t\n      JUMP \t\t\t\n    tag 77\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n      0:\n        .code\n          PUSH 80\t\t\tdhat/console.sol\";\\nimport \".....\n          PUSH 40\t\t\tdhat/console.sol\";\\nimport \".....\n          MSTORE \t\t\tdhat/console.sol\";\\nimport \".....\n          CALLVALUE \t\t\t\n          DUP1 \t\t\t\n          ISZERO \t\t\t\n          PUSH [tag] 1\t\t\t\n          JUMPI \t\t\t\n          PUSH 0\t\t\t\n          DUP1 \t\t\t\n          REVERT \t\t\t\n        tag 1\t\t\t\n          JUMPDEST \t\t\t\n          POP \t\t\t\n          PUSH 40\t\t\t\n          MLOAD \t\t\t\n          PUSHSIZE \t\t\t\n          CODESIZE \t\t\t\n          SUB \t\t\t\n          DUP1 \t\t\t\n          PUSHSIZE \t\t\t\n          DUP4 \t\t\t\n          CODECOPY \t\t\t\n          DUP2 \t\t\t\n          ADD \t\t\t\n          PUSH 40\t\t\t\n          DUP2 \t\t\t\n          SWAP1 \t\t\t\n          MSTORE \t\t\t\n          PUSH [tag] 2\t\t\t\n          SWAP2 \t\t\t\n          PUSH [tag] 3\t\t\t\n          JUMP \t\t\t\n        tag 2\t\t\t\n          JUMPDEST \t\t\t\n          PUSH 0\t\t\t\n          DUP1 \t\t\t\n          SLOAD \t\t\t\n          PUSH 1\t\t\t\n          PUSH 1\t\t\t\n          PUSH A0\t\t\t\n          SHL \t\t\t\n          SUB \t\t\t\n          NOT \t\t\t\n          AND \t\t\t\n          CALLER \t\t\t\n          SWAP1 \t\t\t\n          DUP2 \t\t\t\n          OR \t\t\t\n          DUP3 \t\t\t\n          SSTORE \t\t\t\n          DUP2 \t\t\t\n          MSTORE \t\t\t\n          PUSH 1\t\t\t\n          PUSH 20\t\t\t\n          DUP2 \t\t\t\n          SWAP1 \t\t\t\n          MSTORE \t\t\t\n          PUSH 40\t\t\t\n          DUP3 \t\t\t\n          KECCAK256 \t\t\t\n          SSTORE \t\t\t\n        tag 6\t\t\t\n          JUMPDEST \t\t\t\n          DUP2 \t\t\t\n          MLOAD \t\t\t\n          DUP2 \t\t\t\n          LT \t\t\t\n          ISZERO \t\t\t\n          PUSH [tag] 7\t\t\t\n          JUMPI \t\t\t\n          PUSH 2\t\t\t\n          PUSH 40\t\t\t\n          MLOAD \t\t\t\n          DUP1 \t\t\t\n          PUSH 40\t\t\t\n          ADD \t\t\t\n          PUSH 40\t\t\t\n          MSTORE \t\t\t\n          DUP1 \t\t\t\n          DUP5 \t\t\t\n          DUP5 \t\t\t\n          DUP2 \t\t\t\n          MLOAD \t\t\t\n          DUP2 \t\t\t\n          LT \t\t\t\n          PUSH [tag] 10\t\t\t\n          JUMPI \t\t\t\n          PUSH [tag] 10\t\t\t\n          PUSH [tag] 11\t\t\t\n          JUMP \t\t\t\n        tag 10\t\t\t\n          JUMPDEST \t\t\t\n          PUSH 20\t\t\t\n          SWAP1 \t\t\t\n          DUP2 \t\t\t\n          MUL \t\t\t\n          SWAP2 \t\t\t\n          SWAP1 \t\t\t\n          SWAP2 \t\t\t\n          ADD \t\t\t\n          DUP2 \t\t\t\n          ADD \t\t\t\n          MLOAD \t\t\t\n          DUP3 \t\t\t\n          MSTORE \t\t\t\n          PUSH 0\t\t\t\n          SWAP2 \t\t\t\n          DUP2 \t\t\t\n          ADD \t\t\t\n          DUP3 \t\t\t\n          SWAP1 \t\t\t\n          MSTORE \t\t\t\n          DUP4 \t\t\t\n          SLOAD \t\t\t\n          PUSH 1\t\t\t\n          DUP2 \t\t\t\n          DUP2 \t\t\t\n          ADD \t\t\t\n          DUP7 \t\t\t\n          SSTORE \t\t\t\n          SWAP5 \t\t\t\n          DUP4 \t\t\t\n          MSTORE \t\t\t\n          SWAP2 \t\t\t\n          DUP2 \t\t\t\n          SWAP1 \t\t\t\n          KECCAK256 \t\t\t\n          DUP4 \t\t\t\n          MLOAD \t\t\t\n          PUSH 2\t\t\t\n          SWAP1 \t\t\t\n          SWAP4 \t\t\t\n          MUL \t\t\t\n          ADD \t\t\t\n          SWAP2 \t\t\t\n          DUP3 \t\t\t\n          SSTORE \t\t\t\n          SWAP2 \t\t\t\n          SWAP1 \t\t\t\n          SWAP2 \t\t\t\n          ADD \t\t\t\n          MLOAD \t\t\t\n          SWAP2 \t\t\t\n          ADD \t\t\t\n          SSTORE \t\t\t\n          DUP1 \t\t\t\n          PUSH [tag] 13\t\t\t\n          DUP2 \t\t\t\n          PUSH [tag] 14\t\t\t\n          JUMP \t\t\t\n        tag 13\t\t\t\n          JUMPDEST \t\t\t\n          SWAP2 \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          PUSH [tag] 6\t\t\t\n          JUMP \t\t\t\n        tag 7\t\t\t\n          JUMPDEST \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          PUSH [tag] 17\t\t\tdhat/console.sol\";\\nimport \".....\n          JUMP \t\t\tdhat/console.sol\";\\nimport \".....\n        tag 16\t\t\te-Identifier: GPL-3.0\\n\\npragm...\n          JUMPDEST \t\t\te-Identifier: GPL-3.0\\n\\npragm...\n          PUSH 4E487B71\t\t\t \"remix_te\n          PUSH E0\t\t\tmpo\n          SHL \t\t\t0;\\nimport \"remix_tes\n          PUSH 0\t\t\t.\n          MSTORE \t\t\t.7.0 <0.9.0;\\nimport \"remix_te...\n          PUSH 41\t\t\tort \n          PUSH 4\t\t\ti\n          MSTORE \t\t\t/ this import i\n          PUSH 24\t\t\tecte\n          PUSH 0\t\t\ti\n          REVERT \t\t\tically injected\n        tag 3\t\t\timport \"hardhat/console.sol\";\\...\n          JUMPDEST \t\t\timport \"hardhat/console.sol\";\\...\n          PUSH 0\t\t\tytes32\n          PUSH 20\t\t\tll\n          DUP1 \t\t\t) \n          DUP4 \t\t\t beforeAl\n          DUP6 \t\t\t functi\n          SUB \t\t\t\\n    function beforeAll\n          SLT \t\t\test;\\n    function beforeAll (...\n          ISZERO \t\t\tToTest;\\n    function beforeAl...\n          PUSH [tag] 20\t\t\tToTest;\\n    function beforeAl...\n          JUMPI \t\t\tToTest;\\n    function beforeAl...\n          PUSH 0\t\t\t \n          DUP1 \t\t\t \n          REVERT \t\t\tic {\\n       \n        tag 20\t\t\tToTest;\\n    function beforeAl...\n          JUMPDEST \t\t\tToTest;\\n    function beforeAl...\n          DUP3 \t\t\t32(\"candidate1\")\n          MLOAD \t\t\t32(\"candidate1\")\n          PUSH 1\t\t\t\n          PUSH 1\t\t\t\n          PUSH 40\t\t\t\n          SHL \t\t\t\n          SUB \t\t\t\n          DUP1 \t\t\ts);\\n    }\\n\\n   \n          DUP3 \t\t\ts);\\n    }\\n\\n   \n          GT \t\t\ts);\\n    }\\n\\n   \n          ISZERO \t\t\tames);\\n    }\\n\\n    function ...\n          PUSH [tag] 21\t\t\tames);\\n    }\\n\\n    function ...\n          JUMPI \t\t\tames);\\n    }\\n\\n    function ...\n          PUSH 0\t\t\tc\n          DUP1 \t\t\tc\n          REVERT \t\t\tnction check\n        tag 21\t\t\tames);\\n    }\\n\\n    function ...\n          JUMPDEST \t\t\tames);\\n    }\\n\\n    function ...\n          DUP2 \t\t\tconsol\n          DUP6 \t\t\t {\\n      \n          ADD \t\t\tblic {\\n        console\n          SWAP2 \t\t\tosal () public {\\n        cons...\n          POP \t\t\tosal () public {\\n        cons...\n          DUP6 \t\t\t       \n          PUSH 1F\t\t\tsal\"\n          DUP4 \t\t\tro\n          ADD \t\t\tingProposal\")\n          SLT \t\t\tWinningProposal\");\\n        \n          PUSH [tag] 22\t\t\tning checkWinningProposal\");\\n...\n          JUMPI \t\t\tning checkWinningProposal\");\\n...\n          PUSH 0\t\t\to\n          DUP1 \t\t\tt\n          REVERT \t\t\totToTest.vot\n        tag 22\t\t\tning checkWinningProposal\");\\n...\n          JUMPDEST \t\t\tning checkWinningProposal\");\\n...\n          DUP2 \t\t\tba\n          MLOAD \t\t\tequal(bal\n          DUP2 \t\t\top\n          DUP2 \t\t\tng\n          GT \t\t\tnningPropo\n          ISZERO \t\t\t.winningProposal(), uint(0), \"...\n          PUSH [tag] 24\t\t\t.winningProposal(), uint(0), \"...\n          JUMPI \t\t\t.winningProposal(), uint(0), \"...\n          PUSH [tag] 24\t\t\t(), uint(0), \"prop\n          PUSH [tag] 16\t\t\t(), uint(0), \"prop\n          JUMP \t\t\t(), uint(0), \"prop\n        tag 24\t\t\t(), uint(0), \"prop\n          JUMPDEST \t\t\t(), uint(0), \"prop\n          DUP1 \t\t\te \n          PUSH 5\t\t\t \n          SHL \t\t\td be the w\n          PUSH 40\t\t\tse\n          MLOAD \t\t\t    Asser\n          PUSH 1F\t\t\tan\n          NOT \t\t\t, \"cand\n          PUSH 3F\t\t\tte\n          DUP4 \t\t\tdi\n          ADD \t\t\t\"candidate1\n          AND \t\t\ts32(\"candidate1\"), \"candi\n          DUP2 \t\t\t(), by\n          ADD \t\t\tName(), bytes32(\"candidate1\"),...\n          DUP2 \t\t\tion ch\n          DUP2 \t\t\t}\\n\\n    fun\n          LT \t\t\t   }\\n\\n    function che\n          DUP6 \t\t\t\")\n          DUP3 \t\t\t winner na\n          GT \t\t\tthe winner name\");\n          OR \t\t\tbe the winner name\");\\n    }\\n...\n          ISZERO \t\t\tld be the
 winner name\");\\n    ...\n          PUSH [tag] 26\t\t\tld be the winner name\");\\n    ...\n          JUMPI \t\t\tld be the winner name\");\\n    ...\n          PUSH [tag] 26\t\t\tnninProposalWithRe\n          PUSH [tag] 16\t\t\tnninProposalWithRe\n          JUMP \t\t\tnninProposalWithRe\n        tag 26\t\t\tnninProposalWithRe\n          JUMPDEST \t\t\tnninProposalWithRe\n          PUSH 40\t\t\tc \n          MSTORE \t\t\t) public view returns \n          SWAP2 \t\t\tt.winningProposal(\n          DUP3 \t\t\tt.winningProposal(\n          MSTORE \t\t\tt.winningProposal(\n          DUP5 \t\t\t\n          DUP3 \t\t\t\n          ADD \t\t\t\n          SWAP3 \t\t\t\n          POP \t\t\t\n          DUP4 \t\t\t\n          DUP2 \t\t\t\n          ADD \t\t\t\n          DUP6 \t\t\t\n          ADD \t\t\t\n          SWAP2 \t\t\t\n          DUP9 \t\t\t\n          DUP4 \t\t\t\n          GT \t\t\t\n          ISZERO \t\t\t\n          PUSH [tag] 27\t\t\t\n          JUMPI \t\t\t\n          PUSH 0\t\t\t\n          DUP1 \t\t\t\n          REVERT \t\t\t\n        tag 27\t\t\t\n          JUMPDEST \t\t\t\n          SWAP4 \t\t\t\n          DUP6 \t\t\t\n          ADD \t\t\t\n          SWAP4 \t\t\t\n        tag 28\t\t\t\n          JUMPDEST \t\t\t\n          DUP3 \t\t\t\n          DUP6 \t\t\t\n          LT \t\t\t\n          ISZERO \t\t\t\n          PUSH [tag] 30\t\t\t\n          JUMPI \t\t\t\n          DUP5 \t\t\t\n          MLOAD \t\t\t\n          DUP5 \t\t\t\n          MSTORE \t\t\t\n          SWAP4 \t\t\t\n          DUP6 \t\t\t\n          ADD \t\t\t\n          SWAP4 \t\t\t\n          SWAP3 \t\t\t\n          DUP6 \t\t\t\n          ADD \t\t\t\n          SWAP3 \t\t\t\n          PUSH [tag] 28\t\t\t\n          JUMP \t\t\t\n        tag 30\t\t\t\n          JUMPDEST \t\t\t\n          SWAP9 \t\t\t\n          SWAP8 \t\t\timport \"hardhat/console.sol\";\\...\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          POP \t\t\t\n          JUMP \t\t\timport \"hardhat/console.sol\";\\...\n        tag 11\t\t\t\n          JUMPDEST \t\t\t\n          PUSH 4E487B71\t\t\t\n          PUSH E0\t\t\t\n          SHL \t\t\t\n          PUSH 0\t\t\t\n          MSTORE \t\t\t\n          PUSH 32\t\t\t\n          PUSH 4\t\t\t\n          MSTORE \t\t\t\n          PUSH 24\t\t\t\n          PUSH 0\t\t\t\n          REVERT \t\t\t\n        tag 14\t\t\t\n          JUMPDEST \t\t\t\n          PUSH 0\t\t\t\n          PUSH 1\t\t\t\n          DUP3 \t\t\t\n          ADD \t\t\t\n          PUSH [tag] 33\t\t\t\n          JUMPI \t\t\t\n          PUSH 4E487B71\t\t\t\n          PUSH E0\t\t\t\n          SHL \t\t\t\n          PUSH 0\t\t\t\n          MSTORE \t\t\t\n          PUSH 11\t\t\t\n          PUSH 4\t\t\t\n          MSTORE \t\t\t\n          PUSH 24\t\t\t\n          PUSH 0\t\t\t\n          REVERT \t\t\t\n        tag 33\t\t\t\n          JUMPDEST \t\t\t\n          POP \t\t\t\n          PUSH 1\t\t\t\n          ADD \t\t\t\n          SWAP1 \t\t\t\n          JUMP \t\t\t\n        tag 17\t\t\t\n          JUMPDEST \t\t\t\n          PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tdhat/console.sol\";\\nimport \".....\n          DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n          PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tdhat/console.sol\";\\nimport \".....\n          PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n          CODECOPY \t\t\tdhat/console.sol\";\\nimport \".....\n          PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n          RETURN \t\t\tdhat/console.sol\";\\nimport \".....\n        .data\n          0:\n            .code\n              PUSH 80\t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 40\t\t\tdhat/console.sol\";\\nimport \".....\n              MSTORE \t\t\tdhat/console.sol\";\\nimport \".....\n              CALLVALUE \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              ISZERO \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 1\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              REVERT \t\t\tdhat/console.sol\";\\nimport \".....\n            tag 1\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPDEST \t\t\tdhat/console.sol\";\\nimport \".....\n              POP \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 4\t\t\tdhat/console.sol\";\\nimport \".....\n              CALLDATASIZE \t\t\tdhat/console.sol\";\\nimport \".....\n              LT \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 2\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n              CALLDATALOAD \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH E0\t\t\tdhat/console.sol\";\\nimport \".....\n              SHR \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 609FF1BD\t\t\tdhat/console.sol\";\\nimport \".....\n              GT \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 11\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 609FF1BD\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 7\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 9E7B8D61\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 8\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH A3EC138D\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 9\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH E2BA53F0\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 10\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              REVERT \t\t\tdhat/console.sol\";\\nimport \".....\n            tag 11\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPDEST \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 121B93F\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 3\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 13CF08B\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 4\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 2E4176CF\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 5\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 5C19A95C\t\t\tdhat/console.sol\";\\nimport \".....\n              EQ \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH [tag] 6\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPI \t\t\tdhat/console.sol\";\\nimport \".....\n            tag 2\t\t\tdhat/console.sol\";\\nimport \".....\n              JUMPDEST \t\t\tdhat/console.sol\";\\nimport \".....\n              PUSH 0\t\t\tdhat/console.sol\";\\nimport \".....\n              DUP1 \t\t\tdhat/console.sol\";\\nimport \".....\n              REVERT \t\t\tdhat/console.sol\";\\nimport \".....\n            tag 3\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 12\t\t\t\n              PUSH [tag] 13\t\t\t\n              CALLDATASIZE \t\t\t\n              PUSH 4\t\t\t\n              PUSH [tag] 14\t\t\t\n              JUMP \t\t\t\n            tag 13\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 15\t\t\t\n              JUMP \t\t\t\n            tag 12\t\t\t\n              JUMPDEST \t\t\t\n              STOP \t\t\t\n            tag 4\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n              PUSH [tag] 16\t\t\t\\n    }\\n\\n    function checkW\n              PUSH [tag] 17\t\t\t\\n    }\\n\\n    function checkW\n              CALLDATASIZE \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 4\t\t\t\\n    }\\n\\n    function checkW\n              PUSH [tag] 14\t\t\t\\n    }\\n\\n    function checkW\n              JUMP \t\t\t\\n    }\\n\\n    function checkW\n            tag 17\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n    
          PUSH [tag] 18\t\t\t\\n    }\\n\\n    function checkW\n              JUMP \t\t\t\\n    }\\n\\n    function checkW\n            tag 16\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 40\t\t\t\\n    }\\n\\n    function checkW\n              DUP1 \t\t\t\\n    }\\n\\n    function checkW\n              MLOAD \t\t\t\\n    }\\n\\n    function checkW\n              SWAP3 \t\t\t));\\n        ballotToTest \n              DUP4 \t\t\t));\\n        ballotToTest \n              MSTORE \t\t\t));\\n        ballotToTest \n              PUSH 20\t\t\t  \n              DUP4 \t\t\tposalNames);\\n    }\n              ADD \t\t\tposalNames);\\n    }\n              SWAP2 \t\t\tlot(proposalNames);\\n    }\\n\\n...\n              SWAP1 \t\t\tlot(proposalNames);\\n    }\\n\\n...\n              SWAP2 \t\t\tlot(proposalNames);\\n    }\\n\\n...\n              MSTORE \t\t\tlot(proposalNames);\\n    }\\n\\n...\n              ADD \t\t\ts.push(bytes32(\"ca\n            tag 19\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 40\t\t\t\\n    }\\n\\n    function checkW\n              MLOAD \t\t\t\\n    }\\n\\n    function checkW\n              DUP1 \t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              SUB \t\t\t\\n    }\\n\\n    function checkW\n              SWAP1 \t\t\t\\n    }\\n\\n    function checkW\n              RETURN \t\t\t\\n    }\\n\\n    function checkW\n            tag 5\t\t\tt.winnerName(), bytes32(\"c\n              JUMPDEST \t\t\tt.winnerName(), bytes32(\"c\n              PUSH 0\t\t\tt.winnerName(), bytes32(\"c\n              SLOAD \t\t\tt.winnerName(), bytes32(\"c\n              PUSH [tag] 21\t\t\tt.winnerName(), bytes32(\"c\n              SWAP1 \t\t\tt.winnerName(), bytes32(\"c\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              AND \t\t\tt.winnerName(), bytes32(\"c\n              DUP2 \t\t\tt.winnerName(), bytes32(\"c\n              JUMP \t\t\tt.winnerName(), bytes32(\"c\n            tag 21\t\t\tt.winnerName(), bytes32(\"c\n              JUMPDEST \t\t\tt.winnerName(), bytes32(\"c\n              PUSH 40\t\t\tt.winnerName(), bytes32(\"c\n              MLOAD \t\t\tt.winnerName(), bytes32(\"c\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              SWAP1 \t\t\tuint(0), \"proposal at index 0 ...\n              SWAP2 \t\t\tuint(0), \"proposal at index 0 ...\n              AND \t\t\tuint(0), \"proposal at index 0 ...\n              DUP2 \t\t\tinningProposal(), uint(0), \"pr...\n              MSTORE \t\t\tinningProposal(), uint(0), \"pr...\n              PUSH 20\t\t\tll\n              ADD \t\t\tAssert.equal(ballo\n              PUSH [tag] 19\t\t\tt.winnerName(), bytes32(\"c\n              JUMP \t\t\tWinningProposal () public {\\n ...\n            tag 6\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 12\t\t\t\n              PUSH [tag] 26\t\t\t\n              CALLDATASIZE \t\t\t\n              PUSH 4\t\t\t\n              PUSH [tag] 27\t\t\t\n              JUMP \t\t\t\n            tag 26\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 28\t\t\t\n              JUMP \t\t\t\n            tag 7\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 29\t\t\t\n              PUSH [tag] 30\t\t\t\n              JUMP \t\t\t\n            tag 29\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 19\t\t\t\n              JUMP \t\t\t\n            tag 8\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 12\t\t\t\n              PUSH [tag] 34\t\t\t\n              CALLDATASIZE \t\t\t\n              PUSH 4\t\t\t\n              PUSH [tag] 27\t\t\t\n              JUMP \t\t\t\n            tag 34\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 35\t\t\t\n              JUMP \t\t\t\n            tag 9\t\t\te1\"), \"candidate1 should be th...\n              JUMPDEST \t\t\te1\"), \"candidate1 should be th...\n              PUSH [tag] 36\t\t\te1\"), \"candidate1 should be th...\n              PUSH [tag] 37\t\t\te1\"), \"candidate1 should be th...\n              CALLDATASIZE \t\t\te1\"), \"candidate1 should be th...\n              PUSH 4\t\t\te1\"), \"candidate1 should be th...\n              PUSH [tag] 27\t\t\te1\"), \"candidate1 should be th...\n              JUMP \t\t\te1\"), \"candidate1 should be th...\n            tag 37\t\t\te1\"), \"candidate1 should be th...\n              JUMPDEST \t\t\te1\"), \"candidate1 should be th...\n              PUSH 1\t\t\te1\"), \"candidate1 should be th...\n              PUSH 20\t\t\te1\"), \"candidate1 should be th...\n              DUP2 \t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              MSTORE \t\t\te1\"), \"candidate1 should be th...\n              PUSH 0\t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              DUP3 \t\t\te1\"), \"candidate1 should be th...\n              MSTORE \t\t\te1\"), \"candidate1 should be th...\n              PUSH 40\t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              KECCAK256 \t\t\te1\"), \"candidate1 should be th...\n              DUP1 \t\t\te1\"), \"candidate1 should be th...\n              SLOAD \t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              DUP2 \t\t\te1\"), \"candidate1 should be th...\n              ADD \t\t\te1\"), \"candidate1 should be th...\n              SLOAD \t\t\te1\"), \"candidate1 should be th...\n              PUSH 2\t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              ADD \t\t\te1\"), \"candidate1 should be th...\n              SLOAD \t\t\te1\"), \"candidate1 should be th...\n              PUSH FF\t\t\te1\"), \"candidate1 should be th...\n              DUP3 \t\t\te1\"), \"candidate1 should be th...\n              AND \t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              PUSH 100\t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              DIV \t\t\te1\"), \"candidate1 should be th...\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              AND \t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              DUP5 \t\t\te1\"), \"candidate1 should be th...\n              JUMP \t\t\te1\"), \"candidate1 should be th...\n            tag 36\t\t\te1\"), \"candidate1 should be th...\n              JUMPDEST \t\t\te1\"), \"candidate1 should be th...\n              PUSH 40\t\t\te1\"), \"candidate1 should be th...\n              MLOAD \t\t\te1\"), \"candidate1 should be th...\n              PUSH [tag] 19\t\t\te1\"), \"candidate1 should be th...\n              SWAP5 \t\t\te1\"), \"candidate1 should be th...\n              SWAP4 \t\t\te1\"), \"candidate1 should be th...\n              SWAP3 \t\t\te1\"), \"candidate1 should be th...\n              SWAP2 \t\t\te1\"), \"candidate1 should be th...\n              SWAP1 \t\t\te1\"), \"candidate1 should be th...\n              SWAP4 \t\t\t\n              DUP5 \t\t\t\n              MSTORE \t\t\t\n              SWAP2 \t\t\t\n              ISZERO \t\t\t\n              ISZERO \t\t\t\n              PUSH 20\t\t\t\n              DUP5 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              AND \t\t\t\n              PUSH 40\t\t\t\n              DUP4 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 60\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 80\t\t\t\n              ADD \t\t\t\n              SWAP1 \t\t\t\n              JUMP \t\t\t\n            tag 10\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 29\t\t\t\n              PUSH [tag] 42\t\t\t\n              JUMP \t\t\t\n            tag 15\t\t\t\n              JUMPDEST \t\t\t\n              CALLER \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              DUP2 \t\t\t\n              KECCAK256 \t\t\t\n              DUP1 \t\t\t\n              SLOAD \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SUB \t\t\t\n              PUSH [tag] 46\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 14\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n       
       PUSH 486173206E6F20726967687420746F20766F7465000000000000000000000000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n            tag 47\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              DUP1 \t\t\t\n              SWAP2 \t\t\t\n              SUB \t\t\t\n              SWAP1 \t\t\t\n              REVERT \t\t\t\n            tag 46\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH FF\t\t\t\n              AND \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 49\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH E\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 416C726561647920766F7465642E000000000000000000000000000000000000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 49\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              DUP2 \t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              DUP1 \t\t\t\n              SLOAD \t\t\t\n              PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00\t\t\t\n              AND \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              OR \t\t\t\n              SWAP1 \t\t\t\n              SSTORE \t\t\t\n              PUSH 2\t\t\t\n              DUP1 \t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              DUP4 \t\t\t\n              SWAP1 \t\t\t\n              SSTORE \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SWAP1 \t\t\t\n              DUP5 \t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              PUSH [tag] 53\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 53\t\t\t\n              PUSH [tag] 54\t\t\t\n              JUMP \t\t\t\n            tag 53\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 0\t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 2\t\t\t\n              MUL \t\t\t\n              ADD \t\t\t\n              PUSH 1\t\t\t\n              ADD \t\t\t\n              PUSH 0\t\t\t\n              DUP3 \t\t\t\n              DUP3 \t\t\t\n              SLOAD \t\t\t\n              PUSH [tag] 56\t\t\t\n              SWAP2 \t\t\t\n              SWAP1 \t\t\t\n              PUSH [tag] 57\t\t\t\n              JUMP \t\t\t\n            tag 56\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SSTORE \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              JUMP \t\t\t\n            tag 18\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 2\t\t\t\\n    }\\n\\n    function checkW\n              DUP2 \t\t\t\\n    }\\n\\n    function checkW\n              DUP2 \t\t\t\\n    }\\n\\n    function checkW\n              SLOAD \t\t\t\\n    }\\n\\n    function checkW\n              DUP2 \t\t\t\\n    }\\n\\n    function checkW\n              LT \t\t\t\\n    }\\n\\n    function checkW\n              PUSH [tag] 58\t\t\t\\n    }\\n\\n    function checkW\n              JUMPI \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 0\t\t\t\\n    }\\n\\n    function checkW\n              DUP1 \t\t\t\\n    }\\n\\n    function checkW\n              REVERT \t\t\t\\n    }\\n\\n    function checkW\n            tag 58\t\t\t\\n    }\\n\\n    function checkW\n              JUMPDEST \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 0\t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              DUP3 \t\t\t\\n    }\\n\\n    function checkW\n              MSTORE \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 20\t\t\t\\n    }\\n\\n    function checkW\n              SWAP1 \t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              KECCAK256 \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 2\t\t\t\\n    }\\n\\n    function checkW\n              SWAP1 \t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              MUL \t\t\t\\n    }\\n\\n    function checkW\n              ADD \t\t\t\\n    }\\n\\n    function checkW\n              DUP1 \t\t\t\\n    }\\n\\n    function checkW\n              SLOAD \t\t\t\\n    }\\n\\n    function checkW\n              PUSH 1\t\t\t\\n    }\\n\\n    function checkW\n              SWAP1 \t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              ADD \t\t\t\\n    }\\n\\n    function checkW\n              SLOAD \t\t\t\\n    }\\n\\n    function checkW\n              SWAP1 \t\t\t\\n    }\\n\\n    function checkW\n              SWAP2 \t\t\t\\n    }\\n\\n    function checkW\n              POP \t\t\t\n              DUP3 \t\t\t\\n    }\\n\\n    function checkW\n              JUMP \t\t\t\\n    }\\n\\n    function checkW\n            tag 28\t\t\t\n              JUMPDEST \t\t\t\n              CALLER \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              DUP2 \t\t\t\n              SWAP1 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH FF\t\t\t\n              AND \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 61\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 12\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 596F7520616C726561647920766F7465642E0000000000000000000000000000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 61\t\t\t\n              JUMPDEST \t\t\t\n              CALLER \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP4 \t\t\t\n              AND \t\t\t\n              SUB \t\t\t\n              PUSH [tag] 64\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 1E\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 64\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP3 \t\t\t\n              DUP2 \t\t\t\n              AND \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              DUP2 \t\t\t\n              SWAP1 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              KECCAK256 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH 100\t\t\t\n              SWAP1 \t\t\t\n              DIV \t\t\t\n              AND \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 68\t\t\t\n              JUMPI \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              SWAP2 \t\t\t\n              DUP3 \t\t\t\n              AND \t\t\t\n              PUSH 0\t\t\t\n     
         SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              DUP2 \t\t\t\n              SWAP1 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              KECCAK256 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH 100\t\t\t\n              SWAP1 \t\t\t\n              DIV \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              AND \t\t\t\n              SWAP1 \t\t\t\n              CALLER \t\t\t\n              DUP3 \t\t\t\n              SUB \t\t\t\n              PUSH [tag] 69\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 19\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 69\t\t\t\n              JUMPDEST \t\t\t\n              PUSH [tag] 64\t\t\t\n              JUMP \t\t\t\n            tag 68\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              DUP2 \t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              DUP1 \t\t\t\n              SLOAD \t\t\t\n              PUSH FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000\t\t\t\n              AND \t\t\t\n              PUSH 100\t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP7 \t\t\t\n              AND \t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MUL \t\t\t\n              SWAP2 \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              OR \t\t\t\n              DUP4 \t\t\t\n              OR \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SSTORE \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              DUP3 \t\t\t\n              SWAP1 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH FF\t\t\t\n              AND \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 72\t\t\t\n              JUMPI \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              PUSH 2\t\t\t\n              DUP3 \t\t\t\n              DUP2 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              PUSH [tag] 74\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 74\t\t\t\n              PUSH [tag] 54\t\t\t\n              JUMP \t\t\t\n            tag 74\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 0\t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 2\t\t\t\n              MUL \t\t\t\n              ADD \t\t\t\n              PUSH 1\t\t\t\n              ADD \t\t\t\n              PUSH 0\t\t\t\n              DUP3 \t\t\t\n              DUP3 \t\t\t\n              SLOAD \t\t\t\n              PUSH [tag] 76\t\t\t\n              SWAP2 \t\t\t\n              SWAP1 \t\t\t\n              PUSH [tag] 57\t\t\t\n              JUMP \t\t\t\n            tag 76\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SSTORE \t\t\t\n              POP \t\t\t\n              PUSH [tag] 77\t\t\t\n              SWAP1 \t\t\t\n              POP \t\t\t\n              JUMP \t\t\t\n            tag 72\t\t\t\n              JUMPDEST \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP3 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              PUSH [tag] 78\t\t\t\n              SWAP1 \t\t\t\n              DUP5 \t\t\t\n              SWAP1 \t\t\t\n              PUSH [tag] 57\t\t\t\n              JUMP \t\t\t\n            tag 78\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              SSTORE \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n            tag 77\t\t\t\n              JUMPDEST \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              JUMP \t\t\t\n            tag 30\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 0\t\t\t\n              DUP1 \t\t\t\n              DUP1 \t\t\t\n            tag 80\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 2\t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 81\t\t\t\n              JUMPI \t\t\t\n              DUP2 \t\t\t\n              PUSH 2\t\t\t\n              DUP3 \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              PUSH [tag] 84\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 84\t\t\t\n              PUSH [tag] 54\t\t\t\n              JUMP \t\t\t\n            tag 84\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 0\t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 2\t\t\t\n              MUL \t\t\t\n              ADD \t\t\t\n              PUSH 1\t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              GT \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 86\t\t\t\n              JUMPI \t\t\t\n              PUSH 2\t\t\t\n              DUP2 \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              PUSH [tag] 88\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 88\t\t\t\n              PUSH [tag] 54\t\t\t\n              JUMP \t\t\t\n            tag 88\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 0\t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 2\t\t\t\n              MUL \t\t\t\n              ADD \t\t\t\n              PUSH 1\t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              SWAP2 \t\t\t\n              POP \t\t\t\n              DUP1 \t\t\t\n              SWAP3 \t\t\t\n              POP \t\t\t\n            tag 86\t\t\t\n              JUMPDEST \t\t\t\n              DUP1 \t\t\t\n              PUSH [tag] 90\t\t\t\n              DUP2 \t\t\t\n              PUSH [tag] 91\t\t\t\n              JUMP \t\t\t\n            tag 90\t\t\t\n              JUMPDEST \t\t\t\n              SWAP2 \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              PUSH [tag] 80\t\t\t\n              JUMP \t\t\t\n            tag 81\t\t\t\n              JUMPDEST \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              SWAP1 \t\t\t\n              JUMP \t\t\t\n            tag 35\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 0\t\t\t\n              SLOAD \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              AND \t\t\t\n              CALLER \t\t\t\n              EQ \t\t\t\n              PUSH [tag] 93\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 28\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 4F6E6C79206368616972706572736F6E2063616E206769766520726967687420\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 746F20766F74652E000000000000000000000000000000000000000000000000\t\t\t\n              PUSH 64\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 84\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 93\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP2 \t\t\t\n              AND \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              DUP2 \t\t\t\n              SWAP1
 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              KECCAK256 \t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              PUSH FF\t\t\t\n              AND \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 96\t\t\t\n              JUMPI \t\t\t\n              PUSH 40\t\t\t\n              MLOAD \t\t\t\n              PUSH 461BCD\t\t\t\n              PUSH E5\t\t\t\n              SHL \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 4\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 18\t\t\t\n              PUSH 24\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 54686520766F74657220616C726561647920766F7465642E0000000000000000\t\t\t\n              PUSH 44\t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              MSTORE \t\t\t\n              PUSH 64\t\t\t\n              ADD \t\t\t\n              PUSH [tag] 47\t\t\t\n              JUMP \t\t\t\n            tag 96\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP2 \t\t\t\n              AND \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              KECCAK256 \t\t\t\n              SLOAD \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 99\t\t\t\n              JUMPI \t\t\t\n              PUSH 0\t\t\t\n              DUP1 \t\t\t\n              REVERT \t\t\t\n            tag 99\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              AND \t\t\t\n              PUSH 0\t\t\t\n              SWAP1 \t\t\t\n              DUP2 \t\t\t\n              MSTORE \t\t\t\n              PUSH 1\t\t\t\n              PUSH 20\t\t\t\n              DUP2 \t\t\t\n              SWAP1 \t\t\t\n              MSTORE \t\t\t\n              PUSH 40\t\t\t\n              SWAP1 \t\t\t\n              SWAP2 \t\t\t\n              KECCAK256 \t\t\t\n              SSTORE \t\t\t\n              JUMP \t\t\t\n            tag 42\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 0\t\t\t\n              PUSH 2\t\t\t\n              PUSH [tag] 101\t\t\t\n              PUSH [tag] 30\t\t\t\n              JUMP \t\t\t\n            tag 101\t\t\t\n              JUMPDEST \t\t\t\n              DUP2 \t\t\t\n              SLOAD \t\t\t\n              DUP2 \t\t\t\n              LT \t\t\t\n              PUSH [tag] 103\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 103\t\t\t\n              PUSH [tag] 54\t\t\t\n              JUMP \t\t\t\n            tag 103\t\t\t\n              JUMPDEST \t\t\t\n              SWAP1 \t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 20\t\t\t\n              PUSH 0\t\t\t\n              KECCAK256 \t\t\t\n              SWAP1 \t\t\t\n              PUSH 2\t\t\t\n              MUL \t\t\t\n              ADD \t\t\t\n              PUSH 0\t\t\t\n              ADD \t\t\t\n              SLOAD \t\t\t\n              SWAP1 \t\t\t\n              POP \t\t\t\n              SWAP1 \t\t\t\n              JUMP \t\t\t\n            tag 14\t\t\te-Identifier: GPL-3.0\\n\\npragm...\n              JUMPDEST \t\t\te-Identifier: GPL-3.0\\n\\npragm...\n              PUSH 0\t\t\trt \"re\n              PUSH 20\t\t\t i\n              DUP3 \t\t\tutomatica\n              DUP5 \t\t\tport is\n              SUB \t\t\ts import is automatical\n              SLT \t\t\t this import is automatically ...\n              ISZERO \t\t\t // this import is automatical...\n              PUSH [tag] 108\t\t\t // this import is automatical...\n              JUMPI \t\t\t // this import is automatical...\n              PUSH 0\t\t\ti\n              DUP1 \t\t\tR\n              REVERT \t\t\tted by Remix\n            tag 108\t\t\t // this import is automatical...\n              JUMPDEST \t\t\t // this import is automatical...\n              POP \t\t\t\n              CALLDATALOAD \t\t\tsole.sol\";\\nimport \"../c\n              SWAP2 \t\t\tsole.sol\";\\nimport \"../c\n              SWAP1 \t\t\te-Identifier: GPL-3.0\\n\\npragm...\n              POP \t\t\t\n              JUMP \t\t\te-Identifier: GPL-3.0\\n\\npragm...\n            tag 27\t\t\t     Assert.equal(ballotToTest...\n              JUMPDEST \t\t\t     Assert.equal(ballotToTest...\n              PUSH 0\t\t\tdate1\"\n              PUSH 20\t\t\t }\n              DUP3 \t\t\t name\");\\n\n              DUP5 \t\t\the winn\n              SUB \t\t\tbe the winner name\");\\n \n              SLT \t\t\tuld be the winner name\");\\n   ...\n              ISZERO \t\t\tshould be the winner name\");\\n...\n              PUSH [tag] 112\t\t\tshould be the winner name\");\\n...\n              JUMPI \t\t\tshould be the winner name\");\\n...\n              PUSH 0\t\t\t \n              DUP1 \t\t\ti\n              REVERT \t\t\t  function c\n            tag 112\t\t\tshould be the winner name\");\\n...\n              JUMPDEST \t\t\tshould be the winner name\");\\n...\n              DUP2 \t\t\tpublic vi\n              CALLDATALOAD \t\t\tturnValue () public vie\n              PUSH 1\t\t\t\n              PUSH 1\t\t\t\n              PUSH A0\t\t\t\n              SHL \t\t\t\n              SUB \t\t\t\n              DUP2 \t\t\t ball\n              AND \t\t\tturn ballotToTest.winningPropo...\n              DUP2 \t\t\t     \n              EQ \t\t\t        return ballotToTest.wi...\n              PUSH [tag] 113\t\t\t (bool) {\\n        return ball...\n              JUMPI \t\t\t (bool) {\\n        return ball...\n              PUSH 0\t\t\t\n              DUP1 \t\t\t\n              REVERT \t\t\t\n            tag 113\t\t\t (bool) {\\n        return ball...\n              JUMPDEST \t\t\t (bool) {\\n        return ball...\n              SWAP4 \t\t\t\n              SWAP3 \t\t\t     Assert.equal(ballotToTest...\n              POP \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              JUMP \t\t\t     Assert.equal(ballotToTest...\n            tag 54\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 32\t\t\t\n              PUSH 4\t\t\t\n              MSTORE \t\t\t\n              PUSH 24\t\t\t\n              PUSH 0\t\t\t\n              REVERT \t\t\t\n            tag 105\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n              PUSH 0\t\t\t\n              MSTORE \t\t\t\n              PUSH 11\t\t\t\n              PUSH 4\t\t\t\n              MSTORE \t\t\t\n              PUSH 24\t\t\t\n              PUSH 0\t\t\t\n              REVERT \t\t\t\n            tag 57\t\t\t\n              JUMPDEST \t\t\t\n              DUP1 \t\t\t\n              DUP3 \t\t\t\n              ADD \t\t\t\n              DUP1 \t\t\t\n              DUP3 \t\t\t\n              GT \t\t\t\n              ISZERO \t\t\t\n              PUSH [tag] 123\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 123\t\t\t\n              PUSH [tag] 105\t\t\t\n              JUMP \t\t\t\n            tag 123\t\t\t\n              JUMPDEST \t\t\t\n              SWAP3 \t\t\t\n              SWAP2 \t\t\t\n              POP \t\t\t\n              POP \t\t\t\n              JUMP \t\t\t\n            tag 91\t\t\t\n              JUMPDEST \t\t\t\n              PUSH 0\t\t\t\n              PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n              DUP3 \t\t\t\n              SUB \t\t\t\n              PUSH [tag] 129\t\t\t\n              JUMPI \t\t\t\n              PUSH [tag] 129\t\t\t\n              PUSH [tag] 105\t\t\t\n              JUMP \t\t\t\n            tag 129\t\t\t\n              JUMPDEST \t\t\t\n              POP \t\t\t\n              PUSH 1\t\t\t\n              ADD \t\t\t\n              SWAP1 \t\t\t\n              JUMP \t\t\t\n            .data\n"
}
